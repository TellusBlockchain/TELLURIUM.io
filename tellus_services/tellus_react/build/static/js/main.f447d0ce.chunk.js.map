{"version":3,"sources":["history.js","components/Header.js","components/MainWindow.js","routes/Pages/PagesWelcome.js","routes/Pages/PagesAcceptInvite.js","routes/Users/UsersNew.js","routes/Users/UsersIndex.js","components/RegistryEntitiesNewMap.js","components/AboveTheMapWindow.js","routes/RegistryEntities/RegistryEntitiesNew.js","components/RegistryEntitiesIndexMap.js","routes/RegistryEntities/RegistryEntitiesIndex.js","routes/Pages/PagesExplorer.js","App.js","serviceWorker.js","index.js",".secrets.js"],"names":["createBrowserHistory","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tryToLoginViaMetamask","bind","assertThisInitialized","window","ethereum","console","warning","enable","accounts","Users","contract","UsersJSON","setProvider","web3","currentProvider","defaults","from","deployed","get_my_role","role","toNumber","setState","isLoginnedViaMetamask","localStorage","setItem","app","current_user_role","history","push","react_default","a","createElement","Navbar","className","variant","lib","to","Brand","src","alt","srcSet","Nav","style","width","Link","token_is_valid","Item","type","onClick","React","Component","MainWindow","Container","Row","Col","md","span","offset","children","PagesWelcome","state","components_MainWindow","marginTop","username","query_params","handleInputChange","query_params_str","location","search","split","map","query_param","_query_param$split","_query_param$split2","slicedToArray","k","v","url","process","fetch","response","json","log","e","target","value","checked","name","defineProperty","padding","InputGroup","Form","Control","placeholder","autoComplete","onChange","UsersNew","email","eth_address","invitation_email","email_preview_url","handleClick","handleClickIfIsMetaMask","handleSendInviteButtonClick","result","preview_url","params","method","headers","Content-Type","body","JSON","stringify","create","_context2","t0","isMetaMask","Fragment","Group","controlId","Label","Button","margin","marginBottom","FormControl","Append","wordWrap","href","UsersIndex","users","concat","backgroundColor","minHeight","Table","hover","user","id","RegistryEntitiesNewMap","maps","onMarkerDragEnd","markerListener","Marker","position","lat","lng","draggable","addListener","ev","latLng","remove","height","google_map_react_lib_default","bootstrapURLKeys","key","secrets","defaultCenter","center","defaultZoom","zoom","onGoogleApiLoaded","_ref","renderMarkers","defaultProps","AboveTheMapWindow","RegistryEntitiesNew","ipfs","ipfsClient","protocol","title","description","documents_url","image_url","priceUSD","documents_files","images_files","points","upload_documents","upload_image","saveLatLngToState","event","stopPropagation","preventDefault","files","add","toConsumableArray","progress","prog","Math","round","RegistryEntities","RegistryEntitiesJSON","saveToIpfsDocuments","ipfsId","hash","error","_context3","saveToIpfsImage","t1","components_RegistryEntitiesNewMap","components_AboveTheMapWindow","as","RegistryEntitiesIndexMap","_map","_maps","registry_entities","forEach","registry_entity","marker","showRegistryEntity","warn","prevProps","prevState","snapshot","_this2","RegistryEntitiesIndex","registryEntity","registry_entities_loaded","closeRegistryEntity","loadRegistryEntities","get_current_id","registry_entities_current_id","i","l","find","length","point","created_at","Date","updated_at","parse","coord","replace","components_RegistryEntitiesIndexMap","substring","Spinner","animation","Card","zIndex","Img","Body","top","right","borderRadius","display","verticalAlign","Title","Text","color","PagesExplorer","transactions","paddingTop","aria-label","transaction","transactionHash","eventName","App","getItem","parse_query_params","token","then","res","react_router","components_Header","path","exact","render","Pages_PagesWelcome","assign","PagesAcceptInvite","component","RegistryEntities_RegistryEntitiesIndex","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","development","googleMapsKey","production"],"mappings":"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","file":"static/js/main.f447d0ce.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\n\nimport { Router as Router, Route, Link } from \"react-router-dom\";\nimport { Row, Col, Container, Navbar, Nav, NavItem } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../contracts/Users.json';\n\nclass Header extends React.Component {\n  constructor (props) {\n    super(props);\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      console.warning('You are trying to login via MetaMask, but you have not installed MetaMask')\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      let role = await deployed.get_my_role();\n      role = role.toNumber();\n\n      this.setState({\n        isLoginnedViaMetamask: true,\n        role:                  role\n      });\n\n      localStorage.setItem('current_user_role', role);\n\n      this.props.app.setState({ current_user_role: role });\n      this.props.history.push('/registry_entities');\n    }\n  }\n\n  render () {\n    return (\n      <Navbar className=\"mainHeader\" variant=\"dark\">\n        <LinkContainer to=\"/\">\n          <Navbar.Brand>\n                <img src=\"/tellurium-logo-white.png\"\n                     alt=\"TELLURIUM.IO logo\"\n                     srcSet=\"/tellurium-logo-white@2x.png 2x,\n                             /tellurium-logo-white@3x.png 3x\"\n                     className=\"Tellurium_logo_white\" />\n          </Navbar.Brand>\n        </LinkContainer>\n        <Nav style={{ width: '100%' }} className=\"justify-content-end\">\n          <LinkContainer to=\"/\">\n            <Nav.Link>Welcome</Nav.Link>\n          </LinkContainer>\n          {\n            this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n              <LinkContainer to=\"/users/new\">\n                <Nav.Link>\n                  New User\n                </Nav.Link>\n              </LinkContainer>\n            ) : null\n          }\n          {\n            this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n              <LinkContainer to=\"/users\">\n                <Nav.Link>\n                  Users Index\n                </Nav.Link>\n              </LinkContainer>\n            ) : null\n          }\n          {\n            this.props.current_user_role != null ? (\n              <LinkContainer to=\"/registry_entities/new\">\n                <Nav.Link>\n                  New Registry Entity\n                </Nav.Link>\n              </LinkContainer>\n            ) : null\n          }\n          {\n            this.props.current_user_role != null || this.props.token_is_valid ? (\n              <LinkContainer to=\"/registry_entities\">\n                <Nav.Link>\n                  Decentralized Land Registry\n                </Nav.Link>\n              </LinkContainer>\n            ) : null\n          }\n          <LinkContainer to=\"/explorer\">\n            <Nav.Link>Explorer</Nav.Link>\n          </LinkContainer>\n          {\n            this.props.current_user_role != null ? (\n              null\n            ) : (\n              <Nav.Item>\n                <button type=\"button\"\n                        className=\"signin_via_metamask_button\"\n                        onClick={this.tryToLoginViaMetamask}\n                >Login via MetaMask</button>\n              </Nav.Item>\n            )\n          }\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\n\nclass MainWindow extends React.Component {\n  render () {\n    return (\n      <Container>\n        <Row>\n          <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={ this.props.style }>\n            { this.props.children }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default MainWindow;\n\n\n{/* <React.Fragment>\n<h2>Welcome</h2>\n{\n  this.state.isLoginnedViaMetamask ? (\n    this.state.role === 1 ? (\n      <React.Fragment>\n        <p>You logined via MetaMask as Deployer</p>\n      </React.Fragment>\n    ) : (\n      this.state.role === 2 ? (\n        <React.Fragment>\n          <p>You logined via MetaMask as Notary</p>\n        </React.Fragment>\n      ) : (\n        this.state.role === 3 ? (\n          <React.Fragment>\n            <p>You logined via MetaMask as a common User</p>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <p>You are not in validated users list</p>\n          </React.Fragment>\n        )\n      )\n    )\n  ) : (\n    <React.Fragment>\n      <p>You'll need to auth via MetaMask</p>\n      <button type=\"button\"\n              onClick={this.tryToLoginViaMetamask}\n      >Login via MetaMask</button>\n    </React.Fragment>\n  )\n}\n</React.Fragment> */}","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport { Row, Col, Container } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n  }\n\n  async componentDidMount () {\n    // if (window.ethereum.selectedAddress) {\n    //   await this.tryToLoginViaMetamask();\n    // }\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      console.warning('You are trying to login via MetaMask, but you have not installed MetaMask')\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      let role = await deployed.get_my_role();\n      role = role.toNumber();\n\n      this.setState({\n        isLoginnedViaMetamask: true,\n        role:                  role\n      });\n\n      localStorage.setItem('current_user_role', role);\n\n      this.props.app.setState({ current_user_role: role });\n      this.props.history.push('/registry_entities');\n    }\n  }\n\n  render () {\n    return (\n      <MainWindow style={{ marginTop: '110px' }}>\n        <Row>\n          <Col className=\"separator_hor\">\n            <div>\n              <img src=\"/tellurium-logo.png\"\n                  srcSet=\"/tellurium-logo@2x.png 2x,\n                          /tellurium-logo@3x.png 3x\"\n                  className=\"Tellurium_logo\" />\n            </div>\n            <div>\n              <img src=\"/art.jpg\"\n                  srcSet=\"/art@2x.jpg 2x,\n                          /art@3x.jpg 3x\"\n                  className=\"art\" />\n            </div>\n            <div className=\"With-Proof-of-Ownership\">\n              With Proof of Ownership on the Blockchain property owners can\n              express their real estate rights in the crypto economy with\n              our Patent Pending Blockchain Protocol.\n            </div>\n          </Col>\n          <Col>\n            <div className=\"Welcome\">\n              Welcome!\n            </div>\n            <div className=\"signin_via_metamask_button_container\">\n              <button type=\"button\"\n                      className=\"signin_via_metamask_button\"\n                      onClick={this.tryToLoginViaMetamask}\n              >Login via MetaMask</button>\n            </div>\n            {/* <div className=\"signin_as_notary_button_container\">\n              <button type=\"button\"\n                      className=\"signin_as_notary_button\"\n                      onClick={this.tryToLoginViaMetamask}\n              >Sign in as Notary</button>\n            </div> */}\n          </Col>\n        </Row>\n      </MainWindow>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport { Row, Col, Container, InputGroup, Form } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false,\n      username: '',\n      query_params: {}\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async componentDidMount () {\n    let query_params_str = this.props.location.search.split('?')[1];\n    let query_params = {};\n    query_params_str.split('&').map( (query_param) => {\n      let [ k, v ] = query_param.split('=');\n      query_params[k] = v;\n    });\n    this.setState({ query_params });\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      let url = `${process.env.REACT_APP_BACKEND_URL}/invites/accept_invitation?`;\n      url += 'eth_address=' + accounts[0];\n      url += '&email=' + this.state.query_params['email'];\n      url += '&token=' + this.state.query_params['token'];\n      url += '&username=' + this.state.username;\n      \n      let response = await fetch(url);\n      response = await response.json();\n      console.log(response);\n\n      // const Users = contract(UsersJSON);\n  \n      // Users.setProvider(window.web3.currentProvider);\n      // Users.defaults({\n      //   from: accounts[0]\n      // });\n  \n      // const deployed = await Users.deployed();\n      // let role = await deployed.get_my_role();\n      // role = role.toNumber();\n\n      // if (!role || role === 0) {\n      //   console.log(role);\n      //   return null;\n      // }\n\n      // this.setState({\n      //   isLoginnedViaMetamask: true,\n      //   role: role\n      // });\n\n      this.props.app.setState({ current_user_role: 3 });\n      this.props.history.push('/registry_entities');\n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render () {\n    return (\n      <MainWindow style={{ marginTop: '110px' }}>\n        <Row>\n          <Col className=\"separator_hor\">\n            <div>\n              <img src=\"/tellurium-logo.png\"\n                  srcSet=\"/tellurium-logo@2x.png 2x,\n                          /tellurium-logo@3x.png 3x\"\n                  className=\"Tellurium_logo\" />\n            </div>\n            <div>\n              <img src=\"/art.jpg\"\n                  srcSet=\"/art@2x.jpg 2x,\n                          /art@3x.jpg 3x\"\n                  className=\"art\" />\n            </div>\n            <div className=\"With-Proof-of-Ownership\">\n              With Proof of Ownership on the Blockchain property owners can\n              express their real estate rights in the crypto economy with\n              our Patent Pending Blockchain Protocol.\n            </div>\n          </Col>\n          <Col>\n            <div className=\"Welcome\">\n              Welcome!\n            </div>\n            <div style={{ padding: '0 50px 0 50px', marginTop: '100px' }}>\n              <div>\n                1. Choose your username\n              </div>\n              <InputGroup>\n                <Form.Control type=\"text\"\n                              placeholder=\"Username\"\n                              name=\"username\"\n                              autoComplete='off'\n                              value={this.state.username}\n                              onChange={this.handleInputChange}\n                />\n              </InputGroup>\n              <div style={{ marginTop: '46px' }}>\n                2. Login with MetaMask to proceed\n              </div>\n              <div className=\"signin_via_metamask_button_container_invite_page\">\n                <button type=\"button\"\n                        className=\"signin_via_metamask_button\"\n                        onClick={this.tryToLoginViaMetamask}\n                >Login with MetaMask</button>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </MainWindow>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport UsersJSON from \"../../contracts/Users.json\";\n\nimport { Row, Col, Form, Button, InputGroup, FormControl, Container } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nconst ORDINARY_USER = 3;\n\nclass UsersNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      email: '',\n      eth_address: '',\n      invitation_email: '',\n      email_preview_url: ''\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickIfIsMetaMask = this.handleClickIfIsMetaMask.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSendInviteButtonClick = this.handleSendInviteButtonClick.bind(this);\n  }\n\n  async handleSendInviteButtonClick() {\n    let url = `${process.env.REACT_APP_BACKEND_URL}/invites/send_invitation?mail_to=${this.state.invitation_email}`;\n    let response = await fetch(url);\n    response = await response.json();\n    console.log(response);\n    if (response && response.result&& response.result.preview_url) {\n      this.setState({ email_preview_url: response.result.preview_url });\n    }\n  }\n\n  async handleClickIfIsMetaMask() {\n    let url = `${process.env.REACT_APP_BACKEND_URL}/users`;\n    let params = {\n      email: this.state.email,\n      username: this.state.username,\n      eth_address: this.state.eth_address,\n      role: ORDINARY_USER\n    };\n    let response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    });\n    console.log(response);\n\n    const accounts = await window.ethereum.enable();\n    const Users = contract(UsersJSON);\n\n    Users.setProvider(window.web3.currentProvider);\n    Users.defaults({\n      from: accounts[0]\n    });\n\n    const deployed = await Users.deployed();\n\n    try {\n      await deployed.create(this.state.eth_address, ORDINARY_USER);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      this.handleClickIfIsMetaMask();\n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <MainWindow style={{ marginTop: '110px' }}>\n          <Row>\n            <Col style={{ padding: '30px' }}>\n              <div className=\"Notary-Page\">\n                NOTARY PAGE\n              </div>\n              <Form>\n                <Form.Group controlId=\"formUsername\">\n                  <Form.Label>Username:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Username\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formEmail\">\n                  <Form.Label>Email:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Email\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formEthAddress\">\n                  <Form.Label>Ethereum address:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Ethereum address, e.g. 0x769048c07D7B7f55cD58c14BbE7d828da555dc08\"\n                                name=\"eth_address\"\n                                value={this.state.eth_address}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Row className=\"justify-content-md-center\">\n                    <Button type=\"button\"\n                            onClick={this.handleClick}\n                            variant='success'\n                            style={{ margin: '40px 0 40px 0' }}\n                    >\n                      VALIDATE\n                    </Button>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </MainWindow>\n        <Container>\n          <Row>\n            <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={{ marginTop: '20px', marginBottom: '110px' }}>\n              <div className=\"Notary-Page\" style={{ marginTop: '30px' }}>\n                SEND INVITATION\n              </div>\n              <Row style={{ margin: '50px 0 50px 0' }}>\n                <Col>\n                  <InputGroup>\n                    <FormControl\n                      placeholder=\"Email\"\n                      name='invitation_email'\n                      autoComplete='off'\n                      onChange={this.handleInputChange}\n                      value={this.state.invitation_email}\n                    />\n                    <InputGroup.Append>\n                      <Button variant=\"success\"\n                              onClick={this.handleSendInviteButtonClick}\n                      >SEND INVITE</Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <div style={{ wordWrap: 'break-word' }}>\n                    <a target='_blank' href={this.state.email_preview_url}>\n                      {this.state.email_preview_url}\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default UsersNew;","import React from 'react';\nimport { Table, Row, Col, Container,\n         InputGroup, FormControl, Button, Form } from 'react-bootstrap';\n\nclass UsersIndex extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n  }\n\n  async componentDidMount () {\n    let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users`);\n    response = await response.json();\n    let users = response;\n    this.setState({\n      users\n    });\n  }\n\n  render () {\n    return (\n      <div style={{ backgroundColor: '#e9e9e9', minHeight: '100%' }}>\n        <Container md={{ span: 10, offset: 1 }}>\n          <Row>\n            <Col>\n              <Table hover className='explorer-table'>\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>Email</th>\n                    <th>ETH Address</th>\n                    <th>Role</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                  this.state.users.map((user) => {\n                    return (\n                      <tr>\n                        <td>{user.id}</td>\n                        <td>{user.email}</td>\n                        <td>{user.eth_address}</td>\n                        <td>{user.role}</td>\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default UsersIndex;\n","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nclass RegistryEntitiesNewMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11\n  }\n\n  renderMarkers(map, maps, onMarkerDragEnd) {\n    const marker = new maps.Marker({\n      position: {\n        lat: 37.775,\n        lng: -122.414\n      },\n      map,\n      draggable: true\n    })\n\n    const markerListener = marker.addListener(\"dragend\", (ev) => {\n      onMarkerDragEnd({ lat: ev.latLng.lat(), lng: ev.latLng.lng() });\n    })\n\n    this.setState({\n      markerListener: markerListener\n    })\n  }\n\n  componentWillUnmount() {\n    this.state.markerListener.remove()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' library markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.renderMarkers(map, maps, this.props.onMarkerDragEnd)\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default RegistryEntitiesNewMap\n","import React from 'react';\n\nclass AboveTheMapWindow extends React.Component {\n  render () {\n    return (\n      <div className=\"registry-entities-container\" style={this.props.style}>\n        {\n          this.props.children\n        }\n      </div>\n    )\n  }\n}\n\nexport default AboveTheMapWindow;","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\nimport ipfsClient from 'ipfs-http-client';\n\nimport RegistryEntitiesNewMap from \"../../components/RegistryEntitiesNewMap\";\nimport AboveTheMapWindow from \"../../components/AboveTheMapWindow\";\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.ipfs = ipfsClient(\n      process.env.REACT_APP_IPFS_API_SERVER_URL,\n      process.env.REACT_APP_IPFS_API_SERVER_PORT,\n      { protocol: 'https' }\n    );\n\n    this.state = {\n      title: '',\n      description: '',\n      documents_url: '',\n      image_url: '',\n      priceUSD: '',\n      documents_files: [],\n      images_files: [],\n      points: [ 0, 0, 0 ]\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.upload_documents = this.upload_documents.bind(this);\n    this.upload_image = this.upload_image.bind(this);\n\n    this.saveLatLngToState = this.saveLatLngToState.bind(this);\n  }\n\n  upload_documents (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({ documents_files: event.target.files })\n  }\n\n  async saveToIpfsDocuments (files) {\n    return this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n  }\n\n  upload_image (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({ images_files: event.target.files })\n  }\n\n  async saveToIpfsImage (files) {\n    return this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n  }\n\n  saveLatLngToState(latLng) {\n    this.setState({\n      points: [\n        Math.round(latLng.lat*LAT_LNG_DIVIDER),\n        Math.round(latLng.lng*LAT_LNG_DIVIDER),\n        0\n      ]\n    });\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const RegistryEntities = contract(RegistryEntitiesJSON);\n  \n      RegistryEntities.setProvider(window.web3.currentProvider);\n      RegistryEntities.defaults({\n        from: accounts[0]\n      });\n\n      let response, ipfsId;\n      try {\n        response = await this.saveToIpfsDocuments(this.state.documents_files)\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          documents_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      } catch (err) {\n        console.error(err)\n      }\n\n      try {\n        response = await this.saveToIpfsImage(this.state.images_files)\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          image_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      } catch (err) {\n        console.error(err)\n      }\n\n      const deployed = await RegistryEntities.deployed();\n      await deployed.create(\n        this.state.title,\n        this.state.description,\n        this.state.documents_url,\n        this.state.image_url,\n        this.state.priceUSD,\n        this.state.points\n      );\n      \n      this.props.history.push('/registry_entities')\n    } else {\n  \n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className='map-container'>\n          <RegistryEntitiesNewMap onMarkerDragEnd={this.saveLatLngToState} />\n        </div>\n        <AboveTheMapWindow style={{ padding: '30px' }}>\n          <Form>\n            <Form.Group controlId=\"formTitle\">\n              <Form.Label>Title:</Form.Label>\n              <Form.Control type=\"text\"\n                            placeholder=\"Title\"\n                            name=\"title\"\n                            value={this.state.title}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Description:</Form.Label>\n              <Form.Control as=\"textarea\"\n                            placeholder=\"Description\"\n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formPriceUSD\">\n              <Form.Label>PriceUSD:</Form.Label>\n              <Form.Control type=\"text\"\n                            placeholder=\"Price in USD\"\n                            name=\"priceUSD\"\n                            value={this.state.priceUSD}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formDocumentsUrl\">\n              <Form.Label>Upload Documents:</Form.Label>\n              <Form.Control type=\"file\"\n                            name=\"documents_url\"\n                            onChange={this.upload_documents} />\n            </Form.Group>\n            <Form.Group controlId=\"formImageUrl\">\n              <Form.Label>Upload Image:</Form.Label>\n              <Form.Control type=\"file\"\n                            name=\"image_url\"\n                            onChange={this.upload_image} />\n            </Form.Group>\n            <Form.Group controlId=\"formPoints\">\n              <Form.Label>Coordinates:</Form.Label>\n              <div>\n                Lat: {this.state.points[0]/LAT_LNG_DIVIDER}\n              </div>\n              <div>\n                Lng: {this.state.points[1]/LAT_LNG_DIVIDER}\n              </div>\n              <div>\n                Z: {this.state.points[2]}\n              </div>\n            </Form.Group>\n            <Row>\n              <Col>\n                <Button type=\"button\" onClick={this.handleClick}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </AboveTheMapWindow>\n      </>\n    );\n  }\n}\n\nexport default RegistryEntitiesNew;\n","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesIndexMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11,\n    registry_entities: []\n  }\n\n  renderMarkers() {\n    if (!this.state) {\n      console.warn(\"renderMarkers invoked before this.state initialized.\")\n      return;\n    }\n\n    let _map = this.state._map\n    let _maps = this.state._maps\n\n    try {\n      this.props.registry_entities.forEach((registry_entity) => {\n        let latLng = {\n          lat: registry_entity.points[0] / LAT_LNG_DIVIDER,\n          lng: registry_entity.points[1] / LAT_LNG_DIVIDER\n        }\n\n        let marker = new _maps.Marker({\n          position: {\n            lat: latLng.lat,\n            lng: latLng.lng\n          },\n          map: _map\n        });\n\n        marker.registry_entity = registry_entity;\n        let showRegistryEntity = this.props.showRegistryEntity;\n\n        _maps.event.addListener(marker, 'click', function(e) {\n          showRegistryEntity(this.registry_entity);\n        });\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // REFACTOR: Not the best solution, because 'renderMarkers' function\n    // should be called only on 'this.props.registry_entities' change\n    // event.\n    this.renderMarkers()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.setState({ _map: map, _maps: maps })\n            this.renderMarkers()\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndexMap\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Button, Card, Container, Spinner } from 'react-bootstrap';\n\nimport RegistryEntitiesIndexMap from \"../../components/RegistryEntitiesIndexMap\";\nimport AboveTheMapWindow from \"../../components/AboveTheMapWindow\";\n\nconst use_postgre_cache_as_db = true;\n\nclass RegistryEntitiesIndex extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      registry_entities:        [],\n      showRegistryEntity:       false,\n      registryEntity:           null,\n      registry_entities_loaded: false\n    };\n\n    this.closeRegistryEntity = this.closeRegistryEntity.bind(this);\n    this.showRegistryEntity = this.showRegistryEntity.bind(this);\n  }\n\n  async componentDidMount () {\n    await this.loadRegistryEntities();\n  }\n\n  async loadRegistryEntities () {\n    let registry_entities = [];\n    if (!use_postgre_cache_as_db) {\n      if (window.ethereum.isMetaMask) {\n        const accounts = await window.ethereum.enable();\n        const RegistryEntities = contract(RegistryEntitiesJSON);\n    \n        RegistryEntities.setProvider(window.web3.currentProvider);\n        RegistryEntities.defaults({\n          from: accounts[0]\n        });\n    \n        const deployed = await RegistryEntities.deployed();\n        let registry_entities_current_id = await deployed.get_current_id();\n\n        for (let i = 1, l = registry_entities_current_id.toNumber(); i <= l; l--) {\n          let registry_entity = await deployed.find(l);\n\n          let documents_url = process.env.REACT_APP_SAMPLE_DOCUMENT || '';\n          if (registry_entity[3] && registry_entity[3].length > 0) {\n            documents_url = registry_entity[3];\n          }\n\n          registry_entities.push({\n            id: registry_entity[0].toNumber(),\n            title: registry_entity[1],\n            description: registry_entity[2],\n            documents_url: documents_url,\n            image_url: registry_entity[4],\n            priceUSD: registry_entity[6],\n            points: registry_entity[6].map( point => point.toNumber() ),\n            created_at: (new Date(registry_entity[7].toNumber() * 1000)),\n            updated_at: (new Date(registry_entity[8].toNumber() * 1000))\n          });\n\n          this.setState({\n            registry_entities: registry_entities\n          });\n        }\n      }\n    } else if (use_postgre_cache_as_db) {\n      let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/registry_entities`);\n      response = await response.json();\n      response.map( (registry_entity) => {\n        registry_entity.points = JSON.parse(registry_entity.points)\n        registry_entity.points = registry_entity.points.map( (coord) => (coord >> 0) );\n\n        // Monkey patch for old test urls. TODO: remove after database reset\n        registry_entity.image_url     = registry_entity.image_url.replace('18.195.159.148', 'tellurium.io');\n        registry_entity.image_url     = registry_entity.image_url.replace('localhost', 'tellurium.io');\n        registry_entity.image_url     = registry_entity.image_url.replace('http://', 'https://');\n        registry_entity.image_url     = registry_entity.image_url.replace(':8080', ':8081');\n        registry_entity.documents_url = registry_entity.documents_url.replace('18.195.159.148', 'tellurium.io');\n        registry_entity.documents_url = registry_entity.documents_url.replace('localhost', 'tellurium.io');\n        registry_entity.documents_url = registry_entity.documents_url.replace('http://', 'https://');\n        registry_entity.documents_url = registry_entity.documents_url.replace(':8080', ':8081');\n        if (registry_entity.image_url === \"\") {\n          registry_entity.image_url = \"https://tellurium.io:8081/ipfs/QmPDx9feQjLpnUpdYNZdpSA6Va73vtrRawkbvQWNHphNi5\"\n        }\n        if (registry_entity.documents_url === \"\") {\n          registry_entity.documents_url = \"https://tellurium.io:8081/ipfs/QmUo5uXFymFB2rTaoQb1QcCMxQegE3S9gZx37Z5iTvZ4ZB\"\n        }\n        //\n      });\n      registry_entities = response;\n      this.setState({\n        registry_entities: registry_entities\n      });\n    }\n\n    this.setState({\n      registry_entities_loaded: true\n    });\n  }\n\n  closeRegistryEntity() {\n    this.setState({ showRegistryEntity: false });\n  }\n\n  showRegistryEntity(registry_entity) {\n    this.setState({\n      showRegistryEntity: true,\n      registryEntity:     registry_entity\n    });\n  }\n\n  render() {\n    return !(this.props.token_is_valid || this.props.current_user_role != null) ? (\n      <div style={{ 'color': 'white' }}>No permissions</div>\n    ) : (\n      <>\n        <div className='map-container'>\n          <RegistryEntitiesIndexMap registry_entities={this.state.registry_entities} showRegistryEntity={this.showRegistryEntity} />\n        </div>\n        <AboveTheMapWindow>\n          {\n            this.state.registry_entities.map((registry_entity) => {\n              return (\n                <Row key={registry_entity.id}\n                     className=\"registry-entity-row\"\n                     onClick={() => { this.showRegistryEntity(registry_entity) } }\n                >\n                  <Col>\n                    <h5>{registry_entity.title}</h5>\n                    <p>\n                      {\n                        registry_entity.description.length > 280 ? (\n                          `${registry_entity.description.substring(0, 280)}...`\n                        ) : registry_entity.description\n                      }\n                    </p>\n                  </Col>\n                  <Col md='auto'>\n                    <div className='registry-entities-image-container'>\n                      <img src={registry_entity.image_url} />\n                    </div>\n                  </Col>\n                </Row>\n              )\n            })\n          }\n          {!this.state.registry_entities_loaded && <Row>\n            <Col className='spinnerCol'>\n              <Spinner animation=\"grow\" variant=\"primary\" />\n            </Col>\n          </Row>}\n        </AboveTheMapWindow>\n        {\n          this.state.registryEntity ? (\n            <div className={ \"registry-entity-show-container\" + (this.state.showRegistryEntity ? '' : ' hidden') }>\n              <div className=\"close-button-container\" onClick={this.closeRegistryEntity}>\n                <img src=\"/x.png\"\n                     srcSet=\"/x@2x.png 2x,\n                             /x@3x.png 3x\" />\n              </div>\n              {\n                <Card style={{ position: 'relative', 'zIndex': 250 }}>\n                  <Card.Img variant=\"top\" src={this.state.registryEntity.image_url} />\n                  <Card.Body style={{ position: 'relative' }}>\n                    <Button variant=\"info\"\n                            href={this.state.registryEntity.documents_url}\n                            target=\"_blank\"\n                            style={{ position: \"absolute\", top: '-27px', right: '16px', width: '54px', height: '54px', 'borderRadius': '50%' }}\n                    >\n                      <span style={{ display: 'inline-block', height: '100%', verticalAlign: 'middle' }}></span>\n                      <img src=\"/download-doc.png\"\n                           style={{ verticalAlign: 'middle' }}\n                           srcSet=\"/download-doc@2x.png 2x,\n                                   /download-doc@3x.png 3x\" />\n                    </Button>\n                    <Card.Title>{this.state.registryEntity.title}</Card.Title>\n                    <Card.Text>\n                      <div><b>PriceUSD: {this.state.registryEntity.priceUSD}</b></div>\n                      <div>{this.state.registryEntity.description}</div>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              }\n            </div>\n          ) : null\n        }\n      </>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndex;\n","import React from 'react';\nimport { Table, Row, Col, Container,\n         InputGroup, FormControl, Button, Form } from 'react-bootstrap';\n\nclass PagesExplorer extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      transactions: []\n    };\n  }\n\n  async componentDidMount () {\n    let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/transactions`);\n    response = await response.json();\n    let transactions = response;\n    this.setState({\n      transactions\n    });\n  }\n\n  render () {\n    return (\n      <div style={{ backgroundColor: '#e9e9e9', minHeight: '100%' }}>\n        <Container md={{ span: 10, offset: 1 }}>\n          <Row style={{ paddingTop: '21px' }}>\n            <Col>\n              <InputGroup>\n                <FormControl\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                />\n                <InputGroup.Append>\n                  <Button variant=\"outline-secondary\">Search</Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Col>\n            <Col>\n              <Form.Control as=\"select\">\n                <option>AfterRegistryEntityCreated</option>\n                <option>AfterUserCreate</option>\n              </Form.Control>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Table hover className='explorer-table'>\n                <thead>\n                  <tr>\n                    <th>Transaction Hash</th>\n                    <th>Event</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                  this.state.transactions.map((transaction) => {\n                    return (\n                      <tr>\n                        <td>\n                          <a href={'https://ropsten.etherscan.io/tx/' + transaction.transactionHash}\n                              target=\"_blank\"\n                          >\n                            {transaction.transactionHash}\n                          </a>\n                        </td>\n                        <td>{transaction.eventName}</td>\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default PagesExplorer;\n","import React from 'react';\nimport './App.css';\n\nimport { Router as Router, Route, Switch } from \"react-router-dom\";\nimport history from './history';\n\nimport Header from './components/Header';\n\nimport PagesWelcome          from './routes/Pages/PagesWelcome';\nimport PagesAcceptInvite     from './routes/Pages/PagesAcceptInvite';\nimport UsersNew              from './routes/Users/UsersNew';\nimport UsersIndex            from './routes/Users/UsersIndex';\nimport RegistryEntitiesNew   from './routes/RegistryEntities/RegistryEntitiesNew';\nimport RegistryEntitiesIndex from './routes/RegistryEntities/RegistryEntitiesIndex';\nimport PagesExplorer         from './routes/Pages/PagesExplorer';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n\n    let current_user_role = localStorage.getItem('current_user_role');\n    if (current_user_role != null) {\n      current_user_role = current_user_role >> 0;\n    }\n    let token_is_valid    = localStorage.getItem('token_is_valid') === 'true';\n\n    this.state = {\n      current_user_role: current_user_role,\n      query_params:      this.parse_query_params(props),\n      token_is_valid:    token_is_valid\n    };\n\n    if (this.state.query_params.email && this.state.query_params.token) {\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/users/check_token?email=${this.state.query_params.email}&token=${this.state.query_params.token}`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            localStorage.setItem('token_is_valid', result.token_is_valid);\n            this.setState({\n              token_is_valid: result.token_is_valid\n            });\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.error(error);\n          }\n        )\n    }\n  }\n\n  parse_query_params () {\n    let query_params_str = window.location.search.split('?')[1];\n    if (query_params_str) {\n      let query_params = {};\n      query_params_str.split('&').map( (query_param) => {\n        let [ k, v ] = query_param.split('=');\n        query_params[k] = v;\n      });\n      return query_params;\n    } else {\n      return {};\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          <Header current_user_role={this.state.current_user_role} token_is_valid={this.state.token_is_valid} app={this} history={history} />\n          \n          <Switch>\n            <Route path=\"/\" exact                render={(props) => <PagesWelcome app={this} {...props} />} />\n            <Route path=\"/invites/accept\"        render={(props) => <PagesAcceptInvite app={this} {...props} />} />\n            <Route path=\"/users/new\"             component={UsersNew} />\n            <Route path=\"/users\"                 component={UsersIndex} />\n            <Route path=\"/registry_entities/new\" component={RegistryEntitiesNew} />\n            <Route path=\"/registry_entities\"     render={(props) => <RegistryEntitiesIndex current_user_role={this.state.current_user_role} token_is_valid={this.state.token_is_valid} {...props} /> } />\n            <Route path=\"/explorer\"              component={PagesExplorer} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  development: {\n    googleMapsKey: \"AIzaSyCuKAVxSLNXtd8xiB_JtIv7NDJ6h3sr4C8\"\n  },\n  production: {\n    googleMapsKey: \"AIzaSyCZtFXybQatzJd8ubx58GbemfcUvG572sU\"\n  }\n};"],"sourceRoot":""}