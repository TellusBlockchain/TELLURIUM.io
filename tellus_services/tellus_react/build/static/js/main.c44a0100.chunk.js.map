{"version":3,"sources":["history.js","components/Header.js","components/MainWindow.js","routes/Pages/PagesWelcome.js","routes/Pages/PagesAcceptInvite.js","routes/Users/UsersNew.js","routes/Users/UsersProfile.js","routes/Users/UsersIndex.js","components/RegistryEntitiesNewMap.js","routes/RegistryEntities/RegistryEntitiesNew.js","components/AboveTheMapWindow.js","components/RegistryEntitiesIndexMap.js","routes/RegistryEntities/RegistryEntitiesIndex.js","routes/Pages/PagesExplorer.js","App.js","serviceWorker.js","index.js",".secrets.js"],"names":["createBrowserHistory","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tryToLoginViaMetamask","bind","assertThisInitialized","handleLogoutClick","localStorage","removeItem","app","setState","current_user_role","token_is_valid","history","push","window","ethereum","console","warning","enable","accounts","Users","contract","UsersJSON","setProvider","web3","currentProvider","defaults","from","deployed","get_my_role","role","toNumber","isLoginnedViaMetamask","setItem","react_default","a","createElement","Navbar","className","variant","lib","to","Brand","src","alt","srcSet","Nav","style","width","Link","Item","type","onClick","React","Component","MainWindow","Container","Row","Col","md","span","offset","children","PagesWelcome","state","components_MainWindow","marginTop","username","query_params","handleInputChange","query_params_str","location","search","split","map","query_param","_query_param$split","_query_param$split2","slicedToArray","k","v","url","process","fetch","response","json","log","e","target","value","checked","name","defineProperty","padding","InputGroup","Form","Control","placeholder","autoComplete","onChange","UsersNew","email","eth_address","invitation_email","email_preview_url","handleClick","handleClickIfIsMetaMask","handleSendInviteButtonClick","result","preview_url","params","method","headers","Content-Type","body","JSON","stringify","create","_context2","t0","isMetaMask","Fragment","Group","controlId","Label","Button","margin","marginBottom","FormControl","Append","wordWrap","href","UsersProfile","role_str","account","UsersIndex","users","concat","backgroundColor","minHeight","Table","hover","user","id","RegistryEntitiesNewMap","maps","onMarkerDragEnd","markerListener","Marker","position","lat","lng","draggable","addListener","ev","latLng","remove","height","google_map_react_lib_default","bootstrapURLKeys","key","secrets","defaultCenter","center","defaultZoom","zoom","onGoogleApiLoaded","_ref","renderMarkers","defaultProps","LAT_INITIAL","LONG_INITIAL","RegistryEntitiesNew","opts","protocol","ipfs","ipfsClient","title","description","documents_url","image_url","priceUSD","documents_files","images_files","points","upload_documents","upload_image","saveLatLngToState","event","stopPropagation","preventDefault","files","add","toConsumableArray","progress","prog","Math","round","RegistryEntities","RegistryEntitiesJSON","saveToIpfsDocuments","ipfsId","hash","error","_context3","saveToIpfsImage","t1","components_RegistryEntitiesNewMap","class","as","RegistryEntitiesIndexMap","_map","_maps","registry_entities","forEach","registry_entity","marker","showRegistryEntity","warn","prevProps","prevState","snapshot","_this2","RegistryEntitiesIndex","registryEntity","registry_entities_loaded","show_only_verified","closeRegistryEntity","handleCheckboxChange","loadRegistryEntities","get_current_id","registry_entities_current_id","i","l","find","length","point","created_at","Date","updated_at","verified","parse","coord","replace","components_RegistryEntitiesIndexMap","Check","label","substring","Spinner","animation","Card","zIndex","Img","Body","top","right","borderRadius","display","verticalAlign","Title","Text","color","PagesExplorer","transactions","paddingTop","aria-label","transaction","transactionHash","eventName","App","getItem","parse_query_params","token","then","res","react_router","components_Header","path","exact","render","Pages_PagesWelcome","assign","PagesAcceptInvite","component","Users_UsersProfile","RegistryEntities_RegistryEntitiesIndex","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","development","googleMapsKey","production"],"mappings":"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","file":"static/js/main.c44a0100.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\n\nimport { Router as Router, Route, Link } from \"react-router-dom\";\nimport { Row, Col, Container, Navbar, Nav, NavItem } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../contracts/Users.json';\n\nclass Header extends React.Component {\n  constructor (props) {\n    super(props);\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n  }\n\n  handleLogoutClick () {\n    localStorage.removeItem('current_user_role');\n    localStorage.removeItem('token_is_valid');\n\n    this.props.app.setState({\n      current_user_role: null,\n      token_is_valid: null\n    });\n    \n    this.props.history.push('/');\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      console.warning('You are trying to login via MetaMask, but you have not installed MetaMask')\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      let role = await deployed.get_my_role();\n      role = role.toNumber();\n\n      this.setState({\n        isLoginnedViaMetamask: true,\n        role:                  role\n      });\n\n      localStorage.setItem('current_user_role', role);\n\n      this.props.app.setState({ current_user_role: role });\n      this.props.history.push('/registry_entities');\n    }\n  }\n\n  render () {\n    return (\n      <Navbar className=\"mainHeader\" variant=\"dark\">\n        {\n          this.props.current_user_role != null || this.props.token_is_valid ? (\n            <LinkContainer to=\"/registry_entities\">\n              <Navbar.Brand>\n                    <img src=\"/tellurium-logo-white.png\"\n                         alt=\"TELLURIUM.IO logo\"\n                         srcSet=\"/tellurium-logo-white@2x.png 2x,\n                                 /tellurium-logo-white@3x.png 3x\"\n                         className=\"Tellurium_logo_white\" />\n              </Navbar.Brand>\n            </LinkContainer>\n          ) : (\n            <LinkContainer to=\"/\">\n              <Navbar.Brand>\n                    <img src=\"/tellurium-logo-white.png\"\n                         alt=\"TELLURIUM.IO logo\"\n                         srcSet=\"/tellurium-logo-white@2x.png 2x,\n                                 /tellurium-logo-white@3x.png 3x\"\n                         className=\"Tellurium_logo_white\" />\n              </Navbar.Brand>\n            </LinkContainer>\n          ) \n        }\n\n        <Nav style={{ width: '100%' }} className=\"justify-content-end\">\n          {\n            this.props.current_user_role != null || this.props.token_is_valid ? (\n              <LinkContainer to=\"/registry_entities\">\n                <Nav.Link>\n                  Decentralized Land Registry\n                </Nav.Link>\n              </LinkContainer>\n            ) : null\n          }\n          {\n            this.props.current_user_role != null ? (\n              <LinkContainer to=\"/registry_entities/new\">\n                <Nav.Link>\n                  New Registry Entity\n                </Nav.Link>\n              </LinkContainer>\n            ) : null\n          }\n          {\n            this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n              <LinkContainer to=\"/users\">\n                <Nav.Link>\n                  Users\n                </Nav.Link>\n              </LinkContainer>\n            ) : null\n          }\n          {\n            this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n              <LinkContainer to=\"/users/new\">\n                <Nav.Link>\n                  New User\n                </Nav.Link>\n              </LinkContainer>\n            ) : null\n          }\n          {\n            this.props.current_user_role != null ? (\n              <LinkContainer to=\"/users/profile/my\">\n                <Nav.Link>\n                  Profile\n                </Nav.Link>\n              </LinkContainer>\n            ) : null\n          }\n          <LinkContainer to=\"/explorer\">\n            <Nav.Link>Explorer</Nav.Link>\n          </LinkContainer>\n          {\n            this.props.current_user_role != null ? (\n              null\n            ) : (\n              <Nav.Item>\n                <button type=\"button\"\n                        className=\"signin_via_metamask_button\"\n                        onClick={this.tryToLoginViaMetamask}\n                >Login via MetaMask</button>\n              </Nav.Item>\n            )\n          }\n          {\n            this.props.current_user_role != null || this.props.token_is_valid ? (\n              <LinkContainer to=\"#\">\n                <Nav.Link onClick={this.handleLogoutClick}>\n                  Logout\n                </Nav.Link>\n              </LinkContainer>\n            ) : null\n          }\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\n\nclass MainWindow extends React.Component {\n  render () {\n    return (\n      <Container>\n        <Row>\n          <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={ this.props.style }>\n            { this.props.children }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default MainWindow;\n\n\n{/* <React.Fragment>\n<h2>Welcome</h2>\n{\n  this.state.isLoginnedViaMetamask ? (\n    this.state.role === 1 ? (\n      <React.Fragment>\n        <p>You logined via MetaMask as Deployer</p>\n      </React.Fragment>\n    ) : (\n      this.state.role === 2 ? (\n        <React.Fragment>\n          <p>You logined via MetaMask as Notary</p>\n        </React.Fragment>\n      ) : (\n        this.state.role === 3 ? (\n          <React.Fragment>\n            <p>You logined via MetaMask as a common User</p>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <p>You are not in validated users list</p>\n          </React.Fragment>\n        )\n      )\n    )\n  ) : (\n    <React.Fragment>\n      <p>You'll need to auth via MetaMask</p>\n      <button type=\"button\"\n              onClick={this.tryToLoginViaMetamask}\n      >Login via MetaMask</button>\n    </React.Fragment>\n  )\n}\n</React.Fragment> */}","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport { Row, Col, Container } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n  }\n\n  async componentDidMount () {\n    // if (window.ethereum.selectedAddress) {\n    //   await this.tryToLoginViaMetamask();\n    // }\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      console.warning('You are trying to login via MetaMask, but you have not installed MetaMask')\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      let role = await deployed.get_my_role();\n      role = role.toNumber();\n\n      this.setState({\n        isLoginnedViaMetamask: true,\n        role:                  role\n      });\n\n      localStorage.setItem('current_user_role', role);\n\n      this.props.app.setState({ current_user_role: role });\n      this.props.history.push('/registry_entities');\n    }\n  }\n\n  render () {\n    return (\n      <MainWindow style={{ marginTop: '110px' }}>\n        <Row>\n          <Col className=\"separator_hor\">\n            <div>\n              <img src=\"/tellurium-logo.png\"\n                  srcSet=\"/tellurium-logo@2x.png 2x,\n                          /tellurium-logo@3x.png 3x\"\n                  className=\"Tellurium_logo\" />\n            </div>\n            <div>\n              <img src=\"/art.jpg\"\n                  srcSet=\"/art@2x.jpg 2x,\n                          /art@3x.jpg 3x\"\n                  className=\"art\" />\n            </div>\n            <div className=\"With-Proof-of-Ownership\">\n              With Proof of Ownership on the Blockchain property owners can\n              express their real estate rights in the crypto economy with\n              our Patent Pending Blockchain Protocol.\n            </div>\n          </Col>\n          <Col>\n            <div className=\"Welcome\">\n              Welcome!\n            </div>\n            <div className=\"signin_via_metamask_button_container\">\n              <button type=\"button\"\n                      className=\"signin_via_metamask_button\"\n                      onClick={this.tryToLoginViaMetamask}\n              >Login via MetaMask</button>\n            </div>\n            {/* <div className=\"signin_as_notary_button_container\">\n              <button type=\"button\"\n                      className=\"signin_as_notary_button\"\n                      onClick={this.tryToLoginViaMetamask}\n              >Sign in as Notary</button>\n            </div> */}\n          </Col>\n        </Row>\n      </MainWindow>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport { Row, Col, Container, InputGroup, Form } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false,\n      username: '',\n      query_params: {}\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async componentDidMount () {\n    let query_params_str = this.props.location.search.split('?')[1];\n    let query_params = {};\n    query_params_str.split('&').map( (query_param) => {\n      let [ k, v ] = query_param.split('=');\n      query_params[k] = v;\n    });\n    this.setState({ query_params });\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      let url = `${process.env.REACT_APP_BACKEND_URL}/invites/accept_invitation?`;\n      url += 'eth_address=' + accounts[0];\n      url += '&email=' + this.state.query_params['email'];\n      url += '&token=' + this.state.query_params['token'];\n      url += '&username=' + this.state.username;\n      \n      let response = await fetch(url);\n      response = await response.json();\n      console.log(response);\n\n      // const Users = contract(UsersJSON);\n  \n      // Users.setProvider(window.web3.currentProvider);\n      // Users.defaults({\n      //   from: accounts[0]\n      // });\n  \n      // const deployed = await Users.deployed();\n      // let role = await deployed.get_my_role();\n      // role = role.toNumber();\n\n      // if (!role || role === 0) {\n      //   console.log(role);\n      //   return null;\n      // }\n\n      // this.setState({\n      //   isLoginnedViaMetamask: true,\n      //   role: role\n      // });\n\n      this.props.app.setState({ current_user_role: 3 });\n      this.props.history.push('/registry_entities');\n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render () {\n    return (\n      <MainWindow style={{ marginTop: '110px' }}>\n        <Row>\n          <Col className=\"separator_hor\">\n            <div>\n              <img src=\"/tellurium-logo.png\"\n                  srcSet=\"/tellurium-logo@2x.png 2x,\n                          /tellurium-logo@3x.png 3x\"\n                  className=\"Tellurium_logo\" />\n            </div>\n            <div>\n              <img src=\"/art.jpg\"\n                  srcSet=\"/art@2x.jpg 2x,\n                          /art@3x.jpg 3x\"\n                  className=\"art\" />\n            </div>\n            <div className=\"With-Proof-of-Ownership\">\n              With Proof of Ownership on the Blockchain property owners can\n              express their real estate rights in the crypto economy with\n              our Patent Pending Blockchain Protocol.\n            </div>\n          </Col>\n          <Col>\n            <div className=\"Welcome\">\n              Welcome!\n            </div>\n            <div style={{ padding: '0 50px 0 50px', marginTop: '100px' }}>\n              <div>\n                1. Choose your username\n              </div>\n              <InputGroup>\n                <Form.Control type=\"text\"\n                              placeholder=\"Username\"\n                              name=\"username\"\n                              autoComplete='off'\n                              value={this.state.username}\n                              onChange={this.handleInputChange}\n                />\n              </InputGroup>\n              <div style={{ marginTop: '46px' }}>\n                2. Login with MetaMask to proceed\n              </div>\n              <div className=\"signin_via_metamask_button_container_invite_page\">\n                <button type=\"button\"\n                        className=\"signin_via_metamask_button\"\n                        onClick={this.tryToLoginViaMetamask}\n                >Login with MetaMask</button>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </MainWindow>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport UsersJSON from \"../../contracts/Users.json\";\n\nimport { Row, Col, Form, Button, InputGroup, FormControl, Container } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nconst ORDINARY_USER = 3;\n\nclass UsersNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      email: '',\n      eth_address: '',\n      invitation_email: '',\n      email_preview_url: ''\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickIfIsMetaMask = this.handleClickIfIsMetaMask.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSendInviteButtonClick = this.handleSendInviteButtonClick.bind(this);\n  }\n\n  async handleSendInviteButtonClick() {\n    let url = `${process.env.REACT_APP_BACKEND_URL}/invites/send_invitation?mail_to=${this.state.invitation_email}`;\n    let response = await fetch(url);\n    response = await response.json();\n    console.log(response);\n    if (response && response.result&& response.result.preview_url) {\n      this.setState({ email_preview_url: response.result.preview_url });\n    }\n  }\n\n  async handleClickIfIsMetaMask() {\n    let url = `${process.env.REACT_APP_BACKEND_URL}/users`;\n    let params = {\n      email: this.state.email,\n      username: this.state.username,\n      eth_address: this.state.eth_address,\n      role: ORDINARY_USER\n    };\n    let response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    });\n    console.log(response);\n\n    const accounts = await window.ethereum.enable();\n    const Users = contract(UsersJSON);\n\n    Users.setProvider(window.web3.currentProvider);\n    Users.defaults({\n      from: accounts[0]\n    });\n\n    const deployed = await Users.deployed();\n\n    try {\n      await deployed.create(this.state.eth_address, ORDINARY_USER);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      this.handleClickIfIsMetaMask();\n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <MainWindow style={{ marginTop: '110px' }}>\n          <Row>\n            <Col style={{ padding: '30px' }}>\n              <div className=\"Notary-Page\">\n                NOTARY PAGE\n              </div>\n              <Form>\n                <Form.Group controlId=\"formUsername\">\n                  <Form.Label>Username:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Username\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formEmail\">\n                  <Form.Label>Email:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Email\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formEthAddress\">\n                  <Form.Label>Ethereum address:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Ethereum address, e.g. 0x769048c07D7B7f55cD58c14BbE7d828da555dc08\"\n                                name=\"eth_address\"\n                                value={this.state.eth_address}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Row className=\"justify-content-md-center\">\n                    <Button type=\"button\"\n                            onClick={this.handleClick}\n                            variant='success'\n                            style={{ margin: '40px 0 40px 0' }}\n                    >\n                      VALIDATE\n                    </Button>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </MainWindow>\n        <Container>\n          <Row>\n            <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={{ marginTop: '20px', marginBottom: '110px' }}>\n              <div className=\"Notary-Page\" style={{ marginTop: '30px' }}>\n                SEND INVITATION\n              </div>\n              <Row style={{ margin: '50px 0 50px 0' }}>\n                <Col>\n                  <InputGroup>\n                    <FormControl\n                      placeholder=\"Email\"\n                      name='invitation_email'\n                      autoComplete='off'\n                      onChange={this.handleInputChange}\n                      value={this.state.invitation_email}\n                    />\n                    <InputGroup.Append>\n                      <Button variant=\"success\"\n                              onClick={this.handleSendInviteButtonClick}\n                      >SEND INVITE</Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <div style={{ wordWrap: 'break-word' }}>\n                    <a target='_blank' href={this.state.email_preview_url}>\n                      {this.state.email_preview_url}\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default UsersNew;","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport UsersJSON from \"../../contracts/Users.json\";\n\nimport { Row, Col, Form, Button, InputGroup, FormControl, Container } from 'react-bootstrap';\n\nconst ORDINARY_USER = 3;\n\nclass UsersProfile extends React.Component {\n  constructor (props) {\n    super(props);\n\n    let role_str;\n\n    if (this.props.app.state.current_user_role === 0) {\n      role_str = 'Undefined Role'\n    } else if (this.props.app.state.current_user_role === 1) {\n      role_str = 'Deployer'\n    } else if (this.props.app.state.current_user_role === 2) {\n      role_str = 'Notary'\n    } else if (this.props.app.state.current_user_role === 3) {\n      role_str = 'Ordinary User'\n    }\n\n    this.state = {\n      account: null,\n      role_str: role_str\n    }\n  }\n\n  async componentDidMount () {\n    const accounts = await window.ethereum.enable();\n\n    this.setState({\n      account: accounts[0]\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Container>\n          <Row>\n            <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={{ marginTop: '20px', marginBottom: '110px' }}>\n              <div className=\"Notary-Page\" style={{ marginTop: '30px' }}>\n                PROFILE\n              </div>\n              <Row style={{ margin: '50px 0 50px 0' }}>\n                <Col>\n                  Ethereum Address: {this.state.account}<br/>\n                  Your role: {this.state.role_str} <br/>\n                  <a href=\"#\">My Registry Entities</a>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default UsersProfile;","import React from 'react';\nimport { Table, Row, Col, Container,\n         InputGroup, FormControl, Button, Form } from 'react-bootstrap';\n\nclass UsersIndex extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n  }\n\n  async componentDidMount () {\n    let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users`);\n    response = await response.json();\n    let users = response;\n    this.setState({\n      users\n    });\n  }\n\n  render () {\n    return (\n      <div style={{ backgroundColor: '#e9e9e9', minHeight: '100%' }}>\n        <Container md={{ span: 10, offset: 1 }}>\n          <Row>\n            <Col>\n              <Table hover className='explorer-table'>\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>Email</th>\n                    <th>ETH Address</th>\n                    <th>Role</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                  this.state.users.map((user) => {\n                    return (\n                      <tr>\n                        <td>{user.id}</td>\n                        <td>{user.email}</td>\n                        <td>{user.eth_address}</td>\n                        <td>{user.role}</td>\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default UsersIndex;\n","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nclass RegistryEntitiesNewMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11\n  }\n\n  renderMarkers(map, maps, onMarkerDragEnd) {\n    const marker = new maps.Marker({\n      position: {\n        lat: 37.775,\n        lng: -122.414\n      },\n      map,\n      draggable: true\n    })\n\n    const markerListener = marker.addListener(\"dragend\", (ev) => {\n      onMarkerDragEnd({ lat: ev.latLng.lat(), lng: ev.latLng.lng() });\n    })\n\n    this.setState({\n      markerListener: markerListener\n    })\n  }\n\n  componentWillUnmount() {\n    this.state.markerListener.remove()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' library markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.renderMarkers(map, maps, this.props.onMarkerDragEnd)\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default RegistryEntitiesNewMap\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\nimport ipfsClient from 'ipfs-http-client';\n\nimport RegistryEntitiesNewMap from \"../../components/RegistryEntitiesNewMap\";\nimport AboveTheMapWindow from \"../../components/AboveTheMapWindow\";\n\nconst LAT_LNG_DIVIDER = 1000000;\nconst LAT_INITIAL = 37770658;\nconst LONG_INITIAL = -122414000;\n\nclass RegistryEntitiesNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    let opts = process.env.NODE_ENV === 'production' ? { protocol: 'https' } : {}\n    this.ipfs = ipfsClient(\n      process.env.REACT_APP_IPFS_API_SERVER_URL,\n      process.env.REACT_APP_IPFS_API_SERVER_PORT,\n      opts\n    );\n\n    this.state = {\n      title: '',\n      description: '',\n      documents_url: '',\n      image_url: '',\n      priceUSD: '',\n      documents_files: [],\n      images_files: [],\n      points: [ LAT_INITIAL, LONG_INITIAL, 0 ]\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.upload_documents = this.upload_documents.bind(this);\n    this.upload_image = this.upload_image.bind(this);\n\n    this.saveLatLngToState = this.saveLatLngToState.bind(this);\n  }\n\n  upload_documents (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({ documents_files: event.target.files })\n  }\n\n  async saveToIpfsDocuments (files) {\n    return this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n  }\n\n  upload_image (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({ images_files: event.target.files })\n  }\n\n  async saveToIpfsImage (files) {\n    return this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n  }\n\n  saveLatLngToState(latLng) {\n    this.setState({\n      points: [\n        Math.round(latLng.lat*LAT_LNG_DIVIDER),\n        Math.round(latLng.lng*LAT_LNG_DIVIDER),\n        0\n      ]\n    });\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const RegistryEntities = contract(RegistryEntitiesJSON);\n  \n      RegistryEntities.setProvider(window.web3.currentProvider);\n      RegistryEntities.defaults({\n        from: accounts[0]\n      });\n\n      let response, ipfsId;\n      try {\n        response = await this.saveToIpfsDocuments(this.state.documents_files)\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          documents_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      } catch (err) {\n        console.error(err)\n      }\n\n      try {\n        response = await this.saveToIpfsImage(this.state.images_files)\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          image_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      } catch (err) {\n        console.error(err)\n      }\n\n      const deployed = await RegistryEntities.deployed();\n      await deployed.create(\n        this.state.title,\n        this.state.description,\n        this.state.documents_url,\n        this.state.image_url,\n        this.state.priceUSD,\n        this.state.points,\n        { value: 100000000000000000 }\n      );\n      \n      this.props.history.push('/registry_entities')\n    } else {\n  \n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className='map-container'>\n          <RegistryEntitiesNewMap onMarkerDragEnd={this.saveLatLngToState} />\n        </div>\n        <div className=\"above-the-map-left-window\" style={{ padding: '30px' }}>\n          <div class=\"registry-entities-container\">\n            <Form>\n              <Form.Group controlId=\"formTitle\">\n                <Form.Label>Title:</Form.Label>\n                <Form.Control type=\"text\"\n                              placeholder=\"Title\"\n                              name=\"title\"\n                              value={this.state.title}\n                              onChange={this.handleInputChange} />\n              </Form.Group>\n              <Form.Group controlId=\"formDescription\">\n                <Form.Label>Description:</Form.Label>\n                <Form.Control as=\"textarea\"\n                              placeholder=\"Description\"\n                              name=\"description\"\n                              value={this.state.description}\n                              onChange={this.handleInputChange} />\n              </Form.Group>\n              <Form.Group controlId=\"formPriceUSD\">\n                <Form.Label>PriceUSD:</Form.Label>\n                <Form.Control type=\"text\"\n                              placeholder=\"Price in USD\"\n                              name=\"priceUSD\"\n                              value={this.state.priceUSD}\n                              onChange={this.handleInputChange} />\n              </Form.Group>\n              <Form.Group controlId=\"formDocumentsUrl\">\n                <Form.Label>Upload Documents:</Form.Label>\n                <Form.Control type=\"file\"\n                              name=\"documents_url\"\n                              onChange={this.upload_documents} />\n              </Form.Group>\n              <Form.Group controlId=\"formImageUrl\">\n                <Form.Label>Upload Image:</Form.Label>\n                <Form.Control type=\"file\"\n                              name=\"image_url\"\n                              onChange={this.upload_image} />\n              </Form.Group>\n              <Form.Group controlId=\"formPoints\">\n                <Form.Label>Coordinates:</Form.Label>\n                <div>\n                  Lat: {this.state.points[0]/LAT_LNG_DIVIDER}\n                </div>\n                <div>\n                  Lng: {this.state.points[1]/LAT_LNG_DIVIDER}\n                </div>\n                <div>\n                  Z: {this.state.points[2]}\n                </div>\n              </Form.Group>\n              <Row>\n                <Col>\n                  <Button type=\"button\" onClick={this.handleClick}>\n                    Save\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default RegistryEntitiesNew;\n","import React from 'react';\n\nclass AboveTheMapWindow extends React.Component {\n  render () {\n    return (\n      <div className=\"registry-entities-container\" style={this.props.style}>\n        {\n          this.props.children\n        }\n      </div>\n    )\n  }\n}\n\nexport default AboveTheMapWindow;","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesIndexMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11,\n    registry_entities: []\n  }\n\n  renderMarkers() {\n    if (!this.state) {\n      console.warn(\"renderMarkers invoked before this.state initialized.\")\n      return;\n    }\n\n    let _map = this.state._map\n    let _maps = this.state._maps\n\n    try {\n      this.props.registry_entities.forEach((registry_entity) => {\n        let latLng = {\n          lat: registry_entity.points[0] / LAT_LNG_DIVIDER,\n          lng: registry_entity.points[1] / LAT_LNG_DIVIDER\n        }\n\n        let marker = new _maps.Marker({\n          position: {\n            lat: latLng.lat,\n            lng: latLng.lng\n          },\n          map: _map\n        });\n\n        marker.registry_entity = registry_entity;\n        let showRegistryEntity = this.props.showRegistryEntity;\n\n        _maps.event.addListener(marker, 'click', function(e) {\n          showRegistryEntity(this.registry_entity);\n        });\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // REFACTOR: Not the best solution, because 'renderMarkers' function\n    // should be called only on 'this.props.registry_entities' change\n    // event.\n    this.renderMarkers()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.setState({ _map: map, _maps: maps })\n            this.renderMarkers()\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndexMap\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Button, Card, Container, Spinner, Form } from 'react-bootstrap';\n\nimport RegistryEntitiesIndexMap from \"../../components/RegistryEntitiesIndexMap\";\nimport AboveTheMapWindow from \"../../components/AboveTheMapWindow\";\nimport { relative } from 'path';\n\nconst use_postgre_cache_as_db = true;\n\nclass RegistryEntitiesIndex extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      registry_entities:        [],\n      showRegistryEntity:       false,\n      registryEntity:           null,\n      registry_entities_loaded: false,\n      show_only_verified:       false\n    };\n\n    this.closeRegistryEntity = this.closeRegistryEntity.bind(this);\n    this.showRegistryEntity = this.showRegistryEntity.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n  }\n\n  async componentDidMount () {\n    await this.loadRegistryEntities();\n  }\n\n  async loadRegistryEntities () {\n    let registry_entities = [];\n    if (!use_postgre_cache_as_db) {\n      if (window.ethereum.isMetaMask) {\n        const accounts = await window.ethereum.enable();\n        const RegistryEntities = contract(RegistryEntitiesJSON);\n    \n        RegistryEntities.setProvider(window.web3.currentProvider);\n        RegistryEntities.defaults({\n          from: accounts[0]\n        });\n    \n        const deployed = await RegistryEntities.deployed();\n        let registry_entities_current_id = await deployed.get_current_id();\n\n        for (let i = 1, l = registry_entities_current_id.toNumber(); i <= l; l--) {\n          let registry_entity = await deployed.find(l);\n\n          let documents_url = process.env.REACT_APP_SAMPLE_DOCUMENT || '';\n          if (registry_entity[3] && registry_entity[3].length > 0) {\n            documents_url = registry_entity[3];\n          }\n\n          registry_entities.push({\n            id: registry_entity[0].toNumber(),\n            title: registry_entity[1],\n            description: registry_entity[2],\n            documents_url: documents_url,\n            image_url: registry_entity[4],\n            priceUSD: registry_entity[6],\n            points: registry_entity[6].map( point => point.toNumber() ),\n            created_at: (new Date(registry_entity[7].toNumber() * 1000)),\n            updated_at: (new Date(registry_entity[8].toNumber() * 1000))\n          });\n\n          this.setState({\n            registry_entities: registry_entities\n          });\n        }\n      }\n    } else if (use_postgre_cache_as_db) {\n      let verified = this.state.show_only_verified ? '/verified' : '';\n      let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/registry_entities${verified}`);\n      response = await response.json();\n      response.map( (registry_entity) => {\n        // console.log(registry_entity)\n        \n        registry_entity.points = JSON.parse(registry_entity.points)\n        registry_entity.points = registry_entity.points.map( (coord) => (coord >> 0) );\n\n        // Monkey patch for old test urls. TODO: remove after database reset\n        registry_entity.image_url     = registry_entity.image_url.replace('18.195.159.148', 'tellurium.io');\n        registry_entity.image_url     = registry_entity.image_url.replace('localhost', 'tellurium.io');\n        registry_entity.image_url     = registry_entity.image_url.replace('http://', 'https://');\n        registry_entity.image_url     = registry_entity.image_url.replace(':8080', ':8081');\n        registry_entity.documents_url = registry_entity.documents_url.replace('18.195.159.148', 'tellurium.io');\n        registry_entity.documents_url = registry_entity.documents_url.replace('localhost', 'tellurium.io');\n        registry_entity.documents_url = registry_entity.documents_url.replace('http://', 'https://');\n        registry_entity.documents_url = registry_entity.documents_url.replace(':8080', ':8081');\n        if (registry_entity.image_url === \"\") {\n          registry_entity.image_url = \"https://tellurium.io:8081/ipfs/QmPDx9feQjLpnUpdYNZdpSA6Va73vtrRawkbvQWNHphNi5\"\n        }\n        if (registry_entity.documents_url === \"\") {\n          registry_entity.documents_url = \"https://tellurium.io:8081/ipfs/QmUo5uXFymFB2rTaoQb1QcCMxQegE3S9gZx37Z5iTvZ4ZB\"\n        }\n        //\n      });\n      registry_entities = response;\n      this.setState({\n        registry_entities: registry_entities\n      });\n    }\n\n    this.setState({\n      registry_entities_loaded: true\n    });\n  }\n\n  closeRegistryEntity() {\n    this.setState({ showRegistryEntity: false });\n  }\n\n  showRegistryEntity(registry_entity) {\n    this.setState({\n      showRegistryEntity: true,\n      registryEntity:     registry_entity\n    });\n  }\n\n  async handleCheckboxChange(event) {\n    const value = event.target.checked;\n\n    await this.setState({\n      show_only_verified:       value,\n      registry_entities:        [],\n      showRegistryEntity:       false,\n      registryEntity:           null,\n      registry_entities_loaded: false,\n    });\n\n    await this.loadRegistryEntities();\n  }\n\n  render() {\n    return !(this.props.token_is_valid || this.props.current_user_role != null) ? (\n      <div style={{ 'color': 'white' }}>No permissions</div>\n    ) : (\n      <>\n        <div className='map-container'>\n          <RegistryEntitiesIndexMap registry_entities={this.state.registry_entities}\n                                    showRegistryEntity={this.showRegistryEntity} />\n        </div>\n        <div className=\"above-the-map-left-window\">\n          <Row className=\"registry-entities-container-header\">\n            <Col>\n              <>\n                <Form.Check type={'checkbox'}\n                            id={`show_only_verified_checkbox`}\n                            label={`Show entities only of verified users`}\n                            onChange={this.handleCheckboxChange}/>\n              </>\n            </Col>\n          </Row>\n          <div className=\"registry-entities-container\">\n            {\n              this.state.registry_entities.map((registry_entity) => {\n                return (\n                  <Row key={registry_entity.id}\n                      className=\"registry-entity-row\"\n                      onClick={() => { this.showRegistryEntity(registry_entity) } }\n                  >\n                    <Col>\n                      <h5>{registry_entity.title}</h5>\n                      <p>\n                        {\n                          registry_entity.description.length > 280 ? (\n                            `${registry_entity.description.substring(0, 280)}...`\n                          ) : registry_entity.description\n                        }\n                      </p>\n                    </Col>\n                    <Col md='auto'>\n                      <div className='registry-entities-image-container'>\n                        <img src={registry_entity.image_url} />\n                      </div>\n                    </Col>\n                  </Row>\n                )\n              })\n            }\n          </div>\n          {!this.state.registry_entities_loaded && <Row>\n            <Col className='spinnerCol'>\n              <Spinner animation=\"grow\" variant=\"primary\" />\n            </Col>\n          </Row>}\n        </div>\n        {\n          this.state.registryEntity ? (\n            <div className={ \"registry-entity-show-container\" + (this.state.showRegistryEntity ? '' : ' hidden') }>\n              <div className=\"close-button-container\" onClick={this.closeRegistryEntity}>\n                <img src=\"/x.png\"\n                     srcSet=\"/x@2x.png 2x,\n                             /x@3x.png 3x\" />\n              </div>\n              {\n                <Card style={{ position: 'relative', 'zIndex': 250 }}>\n                  <Card.Img variant=\"top\" src={this.state.registryEntity.image_url} />\n                  <Card.Body style={{ position: 'relative' }}>\n                    <Button variant=\"info\"\n                            href={this.state.registryEntity.documents_url}\n                            target=\"_blank\"\n                            style={{ position: \"absolute\", top: '-27px', right: '16px', width: '54px', height: '54px', 'borderRadius': '50%' }}\n                    >\n                      <span style={{ display: 'inline-block', height: '100%', verticalAlign: 'middle' }}></span>\n                      <img src=\"/download-doc.png\"\n                           style={{ verticalAlign: 'middle' }}\n                           srcSet=\"/download-doc@2x.png 2x,\n                                   /download-doc@3x.png 3x\" />\n                    </Button>\n                    <Card.Title>{this.state.registryEntity.title}</Card.Title>\n                    <Card.Text>\n                      <div><b>PriceUSD: {this.state.registryEntity.priceUSD}</b></div>\n                      <div>{this.state.registryEntity.description}</div>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              }\n            </div>\n          ) : null\n        }\n      </>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndex;\n","import React from 'react';\nimport { Table, Row, Col, Container,\n         InputGroup, FormControl, Button, Form } from 'react-bootstrap';\n\nclass PagesExplorer extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      transactions: []\n    };\n  }\n\n  async componentDidMount () {\n    let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/transactions`);\n    response = await response.json();\n    let transactions = response;\n    this.setState({\n      transactions\n    });\n  }\n\n  render () {\n    return (\n      <div style={{ backgroundColor: '#e9e9e9', minHeight: '100%' }}>\n        <Container md={{ span: 10, offset: 1 }}>\n          <Row style={{ paddingTop: '21px' }}>\n            <Col>\n              <InputGroup>\n                <FormControl\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                />\n                <InputGroup.Append>\n                  <Button variant=\"outline-secondary\">Search</Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Col>\n            <Col>\n              <Form.Control as=\"select\">\n                <option>AfterRegistryEntityCreated</option>\n                <option>AfterUserCreate</option>\n              </Form.Control>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Table hover className='explorer-table'>\n                <thead>\n                  <tr>\n                    <th>Transaction Hash</th>\n                    <th>Event</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                  this.state.transactions.map((transaction) => {\n                    return (\n                      <tr>\n                        <td>\n                          <a href={'https://ropsten.etherscan.io/tx/' + transaction.transactionHash}\n                              target=\"_blank\"\n                          >\n                            {transaction.transactionHash}\n                          </a>\n                        </td>\n                        <td>{transaction.eventName}</td>\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default PagesExplorer;\n","import React from 'react';\nimport './App.css';\n\nimport { Router as Router, Route, Switch } from \"react-router-dom\";\nimport history from './history';\n\nimport Header from './components/Header';\n\nimport PagesWelcome          from './routes/Pages/PagesWelcome';\nimport PagesAcceptInvite     from './routes/Pages/PagesAcceptInvite';\nimport UsersNew              from './routes/Users/UsersNew';\nimport UsersProfile          from './routes/Users/UsersProfile';\nimport UsersIndex            from './routes/Users/UsersIndex';\nimport RegistryEntitiesNew   from './routes/RegistryEntities/RegistryEntitiesNew';\nimport RegistryEntitiesIndex from './routes/RegistryEntities/RegistryEntitiesIndex';\nimport PagesExplorer         from './routes/Pages/PagesExplorer';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n\n    let current_user_role = localStorage.getItem('current_user_role');\n    if (current_user_role != null) {\n      current_user_role = current_user_role >> 0;\n    }\n    let token_is_valid    = localStorage.getItem('token_is_valid') === 'true';\n\n    this.state = {\n      current_user_role: current_user_role,\n      query_params:      this.parse_query_params(props),\n      token_is_valid:    token_is_valid\n    };\n\n    if (this.state.query_params.email && this.state.query_params.token) {\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/users/check_token?email=${this.state.query_params.email}&token=${this.state.query_params.token}`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            localStorage.setItem('token_is_valid', result.token_is_valid);\n            this.setState({\n              token_is_valid: result.token_is_valid\n            });\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.error(error);\n          }\n        )\n    }\n  }\n\n  parse_query_params () {\n    let query_params_str = window.location.search.split('?')[1];\n    if (query_params_str) {\n      let query_params = {};\n      query_params_str.split('&').map( (query_param) => {\n        let [ k, v ] = query_param.split('=');\n        query_params[k] = v;\n      });\n      return query_params;\n    } else {\n      return {};\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          <Header current_user_role={this.state.current_user_role} token_is_valid={this.state.token_is_valid} app={this} history={history} />\n          \n          <Switch>\n            <Route path=\"/\" exact                render={(props) => <PagesWelcome app={this} {...props} />} />\n            <Route path=\"/invites/accept\"        render={(props) => <PagesAcceptInvite app={this} {...props} />} />\n            <Route path=\"/users/new\"             component={UsersNew} />\n            <Route path=\"/users/profile/my\"      render={(props) => <UsersProfile app={this} {...props} />} />\n            <Route path=\"/users\"                 component={UsersIndex} />\n            <Route path=\"/registry_entities/new\" component={RegistryEntitiesNew} />\n            <Route path=\"/registry_entities\"     render={(props) => <RegistryEntitiesIndex current_user_role={this.state.current_user_role} token_is_valid={this.state.token_is_valid} {...props} /> } />\n            <Route path=\"/explorer\"              component={PagesExplorer} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  development: {\n    googleMapsKey: \"AIzaSyCuKAVxSLNXtd8xiB_JtIv7NDJ6h3sr4C8\"\n  },\n  production: {\n    googleMapsKey: \"AIzaSyCZtFXybQatzJd8ubx58GbemfcUvG572sU\"\n  }\n};"],"sourceRoot":""}