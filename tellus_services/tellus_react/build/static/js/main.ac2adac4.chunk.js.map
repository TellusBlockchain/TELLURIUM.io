{"version":3,"sources":["components/Header.js","components/MainWindow.js","routes/Pages/PagesWelcome.js","routes/Pages/PagesAcceptInvite.js","routes/Users/UsersNew.js","routes/Users/UsersIndex.js","components/RegistryEntitiesNewMap.js","components/AboveTheMapWindow.js","routes/RegistryEntities/RegistryEntitiesNew.js","components/RegistryEntitiesIndexMap.js","routes/RegistryEntities/RegistryEntitiesIndex.js","routes/Pages/PagesExplorer.js","App.js","serviceWorker.js","index.js",".secrets.js"],"names":["Header","react_default","a","createElement","className","Container","Row","Col","md","src","srcSet","react_router_dom","to","this","props","current_user_role","token_is_valid","React","Component","MainWindow","span","offset","style","children","PagesWelcome","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLoginnedViaMetamask","tryToLoginViaMetamask","bind","assertThisInitialized","window","ethereum","console","warning","enable","accounts","Users","contract","UsersJSON","setProvider","web3","currentProvider","defaults","from","deployed","get_my_role","role","toNumber","setState","app","history","push","components_MainWindow","marginTop","type","onClick","username","query_params","handleInputChange","query_params_str","location","search","split","map","query_param","_query_param$split","_query_param$split2","slicedToArray","k","v","url","process","fetch","response","json","log","e","target","value","checked","name","defineProperty","padding","InputGroup","Form","Control","placeholder","autoComplete","onChange","UsersNew","email","eth_address","invitation_email","email_preview_url","handleClick","handleClickIfIsMetaMask","handleSendInviteButtonClick","result","preview_url","params","method","headers","Content-Type","body","JSON","stringify","create","_context2","t0","isMetaMask","Fragment","Group","controlId","Label","Button","variant","margin","marginBottom","FormControl","Append","wordWrap","href","UsersIndex","users","concat","backgroundColor","minHeight","Table","hover","user","id","RegistryEntitiesNewMap","maps","onMarkerDragEnd","markerListener","Marker","position","lat","lng","draggable","addListener","ev","latLng","remove","width","height","lib_default","bootstrapURLKeys","key","secrets","defaultCenter","center","defaultZoom","zoom","onGoogleApiLoaded","_ref","renderMarkers","defaultProps","AboveTheMapWindow","RegistryEntitiesNew","ipfs","ipfsClient","title","description","documents_url","image_url","priceUSD","documents_files","images_files","points","upload_documents","upload_image","saveLatLngToState","event","stopPropagation","preventDefault","files","add","toConsumableArray","progress","prog","Math","round","RegistryEntities","RegistryEntitiesJSON","saveToIpfsDocuments","ipfsId","hash","error","_context3","saveToIpfsImage","t1","components_RegistryEntitiesNewMap","components_AboveTheMapWindow","as","RegistryEntitiesIndexMap","_map","_maps","registry_entities","forEach","registry_entity","marker","showRegistryEntity","warn","prevProps","prevState","snapshot","_this2","RegistryEntitiesIndex","registryEntity","registry_entities_loaded","closeRegistryEntity","loadRegistryEntities","get_current_id","registry_entities_current_id","i","l","find","length","point","created_at","Date","updated_at","parse","coord","replace","components_RegistryEntitiesIndexMap","substring","Spinner","animation","Card","zIndex","Img","Body","top","right","borderRadius","display","verticalAlign","Title","Text","color","PagesExplorer","transactions","paddingTop","aria-label","transaction","transactionHash","eventName","App","undefined","parse_query_params","token","then","res","components_Header","react_router","path","exact","render","Pages_PagesWelcome","assign","PagesAcceptInvite","component","RegistryEntities_RegistryEntitiesIndex","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","development","googleMapsKey","production"],"mappings":"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","file":"static/js/main.ac2adac4.chunk.js","sourcesContent":["import React from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Row, Col, Container } from 'react-bootstrap';\n\nclass Header extends React.Component {\n  render () {\n    return (\n      <nav className=\"mainHeader\">\n        <Container>\n          <Row>\n            <Col md=\"auto\">\n              <img src=\"/tellurium-logo-white.png\"\n                   srcSet=\"/tellurium-logo-white@2x.png 2x,\n                          /tellurium-logo-white@3x.png 3x\"\n                   className=\"Tellurium_logo_white\" />\n            </Col>\n            <Col className=\"nav-links-container\">\n              <div>\n                <Link to=\"/\">Welcome</Link>\n              </div>\n              {\n                this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n                  <div>\n                    <Link to=\"/users/new\">New User</Link>\n                  </div>\n                ) : null\n              }\n              {\n                this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n                  <div>\n                    <Link to=\"/users/index\">Users Index</Link>\n                  </div>\n                ) : null\n              }\n              {\n                this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n                  <div>\n                    <Link to=\"/registry_entities/new\">New Registry Entity</Link>\n                  </div>\n                ) : null\n              }\n              {\n                typeof this.props.current_user_role !== 'undefined' || this.props.token_is_valid ? (\n                  <div>\n                    <Link to=\"/registry_entities\">Decentralized Land Registry</Link>\n                  </div>\n                ) : null\n              }\n              <div>\n                <Link to=\"/explorer\">Explorer</Link>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\n\nclass MainWindow extends React.Component {\n  render () {\n    return (\n      <Container>\n        <Row>\n          <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={ this.props.style }>\n            { this.props.children }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default MainWindow;\n\n\n{/* <React.Fragment>\n<h2>Welcome</h2>\n{\n  this.state.isLoginnedViaMetamask ? (\n    this.state.role === 1 ? (\n      <React.Fragment>\n        <p>You logined via MetaMask as Deployer</p>\n      </React.Fragment>\n    ) : (\n      this.state.role === 2 ? (\n        <React.Fragment>\n          <p>You logined via MetaMask as Notary</p>\n        </React.Fragment>\n      ) : (\n        this.state.role === 3 ? (\n          <React.Fragment>\n            <p>You logined via MetaMask as a common User</p>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <p>You are not in validated users list</p>\n          </React.Fragment>\n        )\n      )\n    )\n  ) : (\n    <React.Fragment>\n      <p>You'll need to auth via MetaMask</p>\n      <button type=\"button\"\n              onClick={this.tryToLoginViaMetamask}\n      >Login via MetaMask</button>\n    </React.Fragment>\n  )\n}\n</React.Fragment> */}","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport { Row, Col, Container } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n  }\n\n  async componentDidMount () {\n    // if (window.ethereum.selectedAddress) {\n    //   await this.tryToLoginViaMetamask();\n    // }\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      console.warning('You are trying to login via MetaMask, but you have not installed MetaMask')\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      let role = await deployed.get_my_role();\n      role = role.toNumber();\n\n      this.setState({\n        isLoginnedViaMetamask: true,\n        role:                  role\n      });\n\n      this.props.app.setState({ current_user_role: role });\n      this.props.history.push('/registry_entities');\n    }\n  }\n\n  render () {\n    return (\n      <MainWindow style={{ marginTop: '110px' }}>\n        <Row>\n          <Col className=\"separator_hor\">\n            <div>\n              <img src=\"/tellurium-logo.png\"\n                  srcSet=\"/tellurium-logo@2x.png 2x,\n                          /tellurium-logo@3x.png 3x\"\n                  className=\"Tellurium_logo\" />\n            </div>\n            <div>\n              <img src=\"/art.jpg\"\n                  srcSet=\"/art@2x.jpg 2x,\n                          /art@3x.jpg 3x\"\n                  className=\"art\" />\n            </div>\n            <div className=\"With-Proof-of-Ownership\">\n              With Proof of Ownership on the Blockchain property owners can\n              express their real estate rights in the crypto economy with\n              our Patent Pending Blockchain Protocol.\n            </div>\n          </Col>\n          <Col>\n            <div className=\"Welcome\">\n              Welcome!\n            </div>\n            <div className=\"signin_via_metamask_button_container\">\n              <button type=\"button\"\n                      className=\"signin_via_metamask_button\"\n                      onClick={this.tryToLoginViaMetamask}\n              >Login via MetaMask</button>\n            </div>\n            {/* <div className=\"signin_as_notary_button_container\">\n              <button type=\"button\"\n                      className=\"signin_as_notary_button\"\n                      onClick={this.tryToLoginViaMetamask}\n              >Sign in as Notary</button>\n            </div> */}\n          </Col>\n        </Row>\n      </MainWindow>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport { Row, Col, Container, InputGroup, Form } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false,\n      username: '',\n      query_params: {}\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async componentDidMount () {\n    let query_params_str = this.props.location.search.split('?')[1];\n    let query_params = {};\n    query_params_str.split('&').map( (query_param) => {\n      let [ k, v ] = query_param.split('=');\n      query_params[k] = v;\n    });\n    this.setState({ query_params });\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      let url = `${process.env.REACT_APP_BACKEND_URL}/invites/accept_invitation?`;\n      url += 'eth_address=' + accounts[0];\n      url += '&email=' + this.state.query_params['email'];\n      url += '&token=' + this.state.query_params['token'];\n      url += '&username=' + this.state.username;\n      \n      let response = await fetch(url);\n      response = await response.json();\n      console.log(response);\n\n      // const Users = contract(UsersJSON);\n  \n      // Users.setProvider(window.web3.currentProvider);\n      // Users.defaults({\n      //   from: accounts[0]\n      // });\n  \n      // const deployed = await Users.deployed();\n      // let role = await deployed.get_my_role();\n      // role = role.toNumber();\n\n      // if (!role || role === 0) {\n      //   console.log(role);\n      //   return null;\n      // }\n\n      // this.setState({\n      //   isLoginnedViaMetamask: true,\n      //   role: role\n      // });\n\n      this.props.app.setState({ current_user_role: 3 });\n      this.props.history.push('/registry_entities');\n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render () {\n    return (\n      <MainWindow style={{ marginTop: '110px' }}>\n        <Row>\n          <Col className=\"separator_hor\">\n            <div>\n              <img src=\"/tellurium-logo.png\"\n                  srcSet=\"/tellurium-logo@2x.png 2x,\n                          /tellurium-logo@3x.png 3x\"\n                  className=\"Tellurium_logo\" />\n            </div>\n            <div>\n              <img src=\"/art.jpg\"\n                  srcSet=\"/art@2x.jpg 2x,\n                          /art@3x.jpg 3x\"\n                  className=\"art\" />\n            </div>\n            <div className=\"With-Proof-of-Ownership\">\n              With Proof of Ownership on the Blockchain property owners can\n              express their real estate rights in the crypto economy with\n              our Patent Pending Blockchain Protocol.\n            </div>\n          </Col>\n          <Col>\n            <div className=\"Welcome\">\n              Welcome!\n            </div>\n            <div style={{ padding: '0 50px 0 50px', marginTop: '100px' }}>\n              <div>\n                1. Choose your username\n              </div>\n              <InputGroup>\n                <Form.Control type=\"text\"\n                              placeholder=\"Username\"\n                              name=\"username\"\n                              autoComplete='off'\n                              value={this.state.username}\n                              onChange={this.handleInputChange}\n                />\n              </InputGroup>\n              <div style={{ marginTop: '46px' }}>\n                2. Login with MetaMask to proceed\n              </div>\n              <div className=\"signin_via_metamask_button_container_invite_page\">\n                <button type=\"button\"\n                        className=\"signin_via_metamask_button\"\n                        onClick={this.tryToLoginViaMetamask}\n                >Login with MetaMask</button>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </MainWindow>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport UsersJSON from \"../../contracts/Users.json\";\n\nimport { Row, Col, Form, Button, InputGroup, FormControl, Container } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nconst ORDINARY_USER = 3;\n\nclass UsersNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      email: '',\n      eth_address: '',\n      invitation_email: '',\n      email_preview_url: ''\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickIfIsMetaMask = this.handleClickIfIsMetaMask.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSendInviteButtonClick = this.handleSendInviteButtonClick.bind(this);\n  }\n\n  async handleSendInviteButtonClick() {\n    let url = `${process.env.REACT_APP_BACKEND_URL}/invites/send_invitation?mail_to=${this.state.invitation_email}`;\n    let response = await fetch(url);\n    response = await response.json();\n    console.log(response);\n    if (response && response.result&& response.result.preview_url) {\n      this.setState({ email_preview_url: response.result.preview_url });\n    }\n  }\n\n  async handleClickIfIsMetaMask() {\n    let url = `${process.env.REACT_APP_BACKEND_URL}/users`;\n    let params = {\n      email: this.state.email,\n      username: this.state.username,\n      eth_address: this.state.eth_address,\n      role: ORDINARY_USER\n    };\n    let response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    });\n    console.log(response);\n\n    const accounts = await window.ethereum.enable();\n    const Users = contract(UsersJSON);\n\n    Users.setProvider(window.web3.currentProvider);\n    Users.defaults({\n      from: accounts[0]\n    });\n\n    const deployed = await Users.deployed();\n\n    try {\n      await deployed.create(this.state.eth_address, ORDINARY_USER);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      this.handleClickIfIsMetaMask();\n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <MainWindow style={{ marginTop: '110px' }}>\n          <Row>\n            <Col style={{ padding: '30px' }}>\n              <div className=\"Notary-Page\">\n                NOTARY PAGE\n              </div>\n              <Form>\n                <Form.Group controlId=\"formUsername\">\n                  <Form.Label>Username:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Username\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formEmail\">\n                  <Form.Label>Email:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Email\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formEthAddress\">\n                  <Form.Label>Ethereum address:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Ethereum address, e.g. 0x769048c07D7B7f55cD58c14BbE7d828da555dc08\"\n                                name=\"eth_address\"\n                                value={this.state.eth_address}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Row className=\"justify-content-md-center\">\n                    <Button type=\"button\"\n                            onClick={this.handleClick}\n                            variant='success'\n                            style={{ margin: '40px 0 40px 0' }}\n                    >\n                      VALIDATE\n                    </Button>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </MainWindow>\n        <Container>\n          <Row>\n            <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={{ marginTop: '20px', marginBottom: '110px' }}>\n              <div className=\"Notary-Page\" style={{ marginTop: '30px' }}>\n                SEND INVITATION\n              </div>\n              <Row style={{ margin: '50px 0 50px 0' }}>\n                <Col>\n                  <InputGroup>\n                    <FormControl\n                      placeholder=\"Email\"\n                      name='invitation_email'\n                      autoComplete='off'\n                      onChange={this.handleInputChange}\n                      value={this.state.invitation_email}\n                    />\n                    <InputGroup.Append>\n                      <Button variant=\"success\"\n                              onClick={this.handleSendInviteButtonClick}\n                      >SEND INVITE</Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <div style={{ wordWrap: 'break-word' }}>\n                    <a target='_blank' href={this.state.email_preview_url}>\n                      {this.state.email_preview_url}\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default UsersNew;","import React from 'react';\nimport { Table, Row, Col, Container,\n         InputGroup, FormControl, Button, Form } from 'react-bootstrap';\n\nclass UsersIndex extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n  }\n\n  async componentDidMount () {\n    let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users`);\n    response = await response.json();\n    let users = response;\n    this.setState({\n      users\n    });\n  }\n\n  render () {\n    return (\n      <div style={{ backgroundColor: '#e9e9e9', minHeight: '100%' }}>\n        <Container md={{ span: 10, offset: 1 }}>\n          <Row>\n            <Col>\n              <Table hover className='explorer-table'>\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>Email</th>\n                    <th>ETH Address</th>\n                    <th>Role</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                  this.state.users.map((user) => {\n                    return (\n                      <tr>\n                        <td>{user.id}</td>\n                        <td>{user.email}</td>\n                        <td>{user.eth_address}</td>\n                        <td>{user.role}</td>\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default UsersIndex;\n","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nclass RegistryEntitiesNewMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11\n  }\n\n  renderMarkers(map, maps, onMarkerDragEnd) {\n    const marker = new maps.Marker({\n      position: {\n        lat: 37.775,\n        lng: -122.414\n      },\n      map,\n      draggable: true\n    })\n\n    const markerListener = marker.addListener(\"dragend\", (ev) => {\n      onMarkerDragEnd({ lat: ev.latLng.lat(), lng: ev.latLng.lng() });\n    })\n\n    this.setState({\n      markerListener: markerListener\n    })\n  }\n\n  componentWillUnmount() {\n    this.state.markerListener.remove()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' library markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.renderMarkers(map, maps, this.props.onMarkerDragEnd)\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default RegistryEntitiesNewMap\n","import React from 'react';\n\nclass AboveTheMapWindow extends React.Component {\n  render () {\n    return (\n      <div className=\"registry-entities-container\" style={this.props.style}>\n        {\n          this.props.children\n        }\n      </div>\n    )\n  }\n}\n\nexport default AboveTheMapWindow;","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\nimport ipfsClient from 'ipfs-http-client';\n\nimport RegistryEntitiesNewMap from \"../../components/RegistryEntitiesNewMap\";\nimport AboveTheMapWindow from \"../../components/AboveTheMapWindow\";\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.ipfs = ipfsClient(\n      process.env.REACT_APP_IPFS_API_SERVER_URL,\n      process.env.REACT_APP_IPFS_API_SERVER_PORT\n    );\n\n    this.state = {\n      title: '',\n      description: '',\n      documents_url: '',\n      image_url: '',\n      priceUSD: '',\n      documents_files: [],\n      images_files: [],\n      points: [ 0, 0, 0 ]\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.upload_documents = this.upload_documents.bind(this);\n    this.upload_image = this.upload_image.bind(this);\n\n    this.saveLatLngToState = this.saveLatLngToState.bind(this);\n  }\n\n  upload_documents (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({ documents_files: event.target.files })\n  }\n\n  async saveToIpfsDocuments (files) {\n    return this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n  }\n\n  upload_image (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({ images_files: event.target.files })\n  }\n\n  async saveToIpfsImage (files) {\n    return this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n  }\n\n  saveLatLngToState(latLng) {\n    this.setState({\n      points: [\n        Math.round(latLng.lat*LAT_LNG_DIVIDER),\n        Math.round(latLng.lng*LAT_LNG_DIVIDER),\n        0\n      ]\n    });\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const RegistryEntities = contract(RegistryEntitiesJSON);\n  \n      RegistryEntities.setProvider(window.web3.currentProvider);\n      RegistryEntities.defaults({\n        from: accounts[0]\n      });\n\n      let response, ipfsId;\n      try {\n        response = await this.saveToIpfsDocuments(this.state.documents_files)\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          documents_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      } catch (err) {\n        console.error(err)\n      }\n\n      try {\n        response = await this.saveToIpfsImage(this.state.images_files)\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          image_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      } catch (err) {\n        console.error(err)\n      }\n\n      const deployed = await RegistryEntities.deployed();\n      await deployed.create(\n        this.state.title,\n        this.state.description,\n        this.state.documents_url,\n        this.state.image_url,\n        this.state.priceUSD,\n        this.state.points\n      );\n      \n      this.props.history.push('/registry_entities')\n    } else {\n  \n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className='map-container'>\n          <RegistryEntitiesNewMap onMarkerDragEnd={this.saveLatLngToState} />\n        </div>\n        <AboveTheMapWindow style={{ padding: '30px' }}>\n          <Form>\n            <Form.Group controlId=\"formTitle\">\n              <Form.Label>Title:</Form.Label>\n              <Form.Control type=\"text\"\n                            placeholder=\"Title\"\n                            name=\"title\"\n                            value={this.state.title}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Description:</Form.Label>\n              <Form.Control as=\"textarea\"\n                            placeholder=\"Description\"\n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formPriceUSD\">\n              <Form.Label>PriceUSD:</Form.Label>\n              <Form.Control type=\"text\"\n                            placeholder=\"Price in USD\"\n                            name=\"priceUSD\"\n                            value={this.state.priceUSD}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formDocumentsUrl\">\n              <Form.Label>Upload Documents:</Form.Label>\n              <Form.Control type=\"file\"\n                            name=\"documents_url\"\n                            onChange={this.upload_documents} />\n            </Form.Group>\n            <Form.Group controlId=\"formImageUrl\">\n              <Form.Label>Upload Image:</Form.Label>\n              <Form.Control type=\"file\"\n                            name=\"image_url\"\n                            onChange={this.upload_image} />\n            </Form.Group>\n            <Form.Group controlId=\"formPoints\">\n              <Form.Label>Coordinates:</Form.Label>\n              <div>\n                Lat: {this.state.points[0]/LAT_LNG_DIVIDER}\n              </div>\n              <div>\n                Lng: {this.state.points[1]/LAT_LNG_DIVIDER}\n              </div>\n              <div>\n                Z: {this.state.points[2]}\n              </div>\n            </Form.Group>\n            <Row>\n              <Col>\n                <Button type=\"button\" onClick={this.handleClick}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </AboveTheMapWindow>\n      </>\n    );\n  }\n}\n\nexport default RegistryEntitiesNew;\n","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesIndexMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11,\n    registry_entities: []\n  }\n\n  renderMarkers() {\n    if (!this.state) {\n      console.warn(\"renderMarkers invoked before this.state initialized.\")\n      return;\n    }\n\n    let _map = this.state._map\n    let _maps = this.state._maps\n\n    try {\n      this.props.registry_entities.forEach((registry_entity) => {\n        let latLng = {\n          lat: registry_entity.points[0] / LAT_LNG_DIVIDER,\n          lng: registry_entity.points[1] / LAT_LNG_DIVIDER\n        }\n\n        let marker = new _maps.Marker({\n          position: {\n            lat: latLng.lat,\n            lng: latLng.lng\n          },\n          map: _map\n        });\n\n        marker.registry_entity = registry_entity;\n        let showRegistryEntity = this.props.showRegistryEntity;\n\n        _maps.event.addListener(marker, 'click', function(e) {\n          showRegistryEntity(this.registry_entity);\n        });\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // REFACTOR: Not the best solution, because 'renderMarkers' function\n    // should be called only on 'this.props.registry_entities' change\n    // event.\n    this.renderMarkers()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.setState({ _map: map, _maps: maps })\n            this.renderMarkers()\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndexMap\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Button, Card, Container, Spinner } from 'react-bootstrap';\n\nimport RegistryEntitiesIndexMap from \"../../components/RegistryEntitiesIndexMap\";\nimport AboveTheMapWindow from \"../../components/AboveTheMapWindow\";\n\nconst use_postgre_cache_as_db = true;\n\nclass RegistryEntitiesIndex extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      registry_entities:        [],\n      showRegistryEntity:       false,\n      registryEntity:           null,\n      registry_entities_loaded: false\n    };\n\n    this.closeRegistryEntity = this.closeRegistryEntity.bind(this);\n    this.showRegistryEntity = this.showRegistryEntity.bind(this);\n  }\n\n  async componentDidMount () {\n    await this.loadRegistryEntities();\n  }\n\n  async loadRegistryEntities () {\n    let registry_entities = [];\n    if (!use_postgre_cache_as_db) {\n      if (window.ethereum.isMetaMask) {\n        const accounts = await window.ethereum.enable();\n        const RegistryEntities = contract(RegistryEntitiesJSON);\n    \n        RegistryEntities.setProvider(window.web3.currentProvider);\n        RegistryEntities.defaults({\n          from: accounts[0]\n        });\n    \n        const deployed = await RegistryEntities.deployed();\n        let registry_entities_current_id = await deployed.get_current_id();\n\n        for (let i = 1, l = registry_entities_current_id.toNumber(); i <= l; l--) {\n          let registry_entity = await deployed.find(l);\n\n          let documents_url = process.env.REACT_APP_SAMPLE_DOCUMENT || '';\n          if (registry_entity[3] && registry_entity[3].length > 0) {\n            documents_url = registry_entity[3];\n          }\n\n          registry_entities.push({\n            id: registry_entity[0].toNumber(),\n            title: registry_entity[1],\n            description: registry_entity[2],\n            documents_url: documents_url,\n            image_url: registry_entity[4],\n            priceUSD: registry_entity[6],\n            points: registry_entity[6].map( point => point.toNumber() ),\n            created_at: (new Date(registry_entity[7].toNumber() * 1000)),\n            updated_at: (new Date(registry_entity[8].toNumber() * 1000))\n          });\n\n          this.setState({\n            registry_entities: registry_entities\n          });\n        }\n      }\n    } else if (use_postgre_cache_as_db) {\n      let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/registry_entities`);\n      response = await response.json();\n      response.map( (registry_entity) => {\n        registry_entity.points = JSON.parse(registry_entity.points)\n        registry_entity.points = registry_entity.points.map( (coord) => (coord >> 0) );\n\n        // Monkey patch for old test urls. TODO: remove after database reset\n        registry_entity.image_url     = registry_entity.image_url.replace('18.195.159.148', 'tellurium.io');\n        registry_entity.documents_url = registry_entity.documents_url.replace('18.195.159.148', 'tellurium.io');\n        if (registry_entity.image_url === \"\") {\n          registry_entity.image_url = \"http://localhost:8080/ipfs/QmPDx9feQjLpnUpdYNZdpSA6Va73vtrRawkbvQWNHphNi5\"\n        }\n        if (registry_entity.documents_url === \"\") {\n          registry_entity.documents_url = \"http://tellurium.io:8080/ipfs/QmUo5uXFymFB2rTaoQb1QcCMxQegE3S9gZx37Z5iTvZ4ZB\"\n        }\n      });\n      registry_entities = response;\n      this.setState({\n        registry_entities: registry_entities\n      });\n    }\n\n    this.setState({\n      registry_entities_loaded: true\n    });\n  }\n\n  closeRegistryEntity() {\n    this.setState({ showRegistryEntity: false });\n  }\n\n  showRegistryEntity(registry_entity) {\n    this.setState({\n      showRegistryEntity: true,\n      registryEntity:     registry_entity\n    });\n  }\n\n  render() {\n    return !(this.props.token_is_valid || this.props.current_user_role) ? (\n      <div style={{ 'color': 'white' }}>No permissions</div>\n    ) : (\n      <>\n        <div className='map-container'>\n          <RegistryEntitiesIndexMap registry_entities={this.state.registry_entities} showRegistryEntity={this.showRegistryEntity} />\n        </div>\n        <AboveTheMapWindow>\n          {\n            this.state.registry_entities.map((registry_entity) => {\n              return (\n                <Row key={registry_entity.id}\n                     className=\"registry-entity-row\"\n                     onClick={() => { this.showRegistryEntity(registry_entity) } }\n                >\n                  <Col>\n                    <h5>{registry_entity.title}</h5>\n                    <p>\n                      {\n                        registry_entity.description.length > 280 ? (\n                          `${registry_entity.description.substring(0, 280)}...`\n                        ) : registry_entity.description\n                      }\n                    </p>\n                  </Col>\n                  <Col md='auto'>\n                    <div className='registry-entities-image-container'>\n                      <img src={registry_entity.image_url} />\n                    </div>\n                  </Col>\n                </Row>\n              )\n            })\n          }\n          {!this.state.registry_entities_loaded && <Row>\n            <Col className='spinnerCol'>\n              <Spinner animation=\"grow\" variant=\"primary\" />\n            </Col>\n          </Row>}\n        </AboveTheMapWindow>\n        {\n          this.state.registryEntity ? (\n            <div className={ \"registry-entity-show-container\" + (this.state.showRegistryEntity ? '' : ' hidden') }>\n              <div className=\"close-button-container\" onClick={this.closeRegistryEntity}>\n                <img src=\"/x.png\"\n                     srcSet=\"/x@2x.png 2x,\n                             /x@3x.png 3x\" />\n              </div>\n              {\n                <Card style={{ position: 'relative', 'zIndex': 250 }}>\n                  <Card.Img variant=\"top\" src={this.state.registryEntity.image_url} />\n                  <Card.Body style={{ position: 'relative' }}>\n                    <Button variant=\"info\"\n                            href={this.state.registryEntity.documents_url}\n                            target=\"_blank\"\n                            style={{ position: \"absolute\", top: '-27px', right: '16px', width: '54px', height: '54px', 'borderRadius': '50%' }}\n                    >\n                      <span style={{ display: 'inline-block', height: '100%', verticalAlign: 'middle' }}></span>\n                      <img src=\"/download-doc.png\"\n                           style={{ verticalAlign: 'middle' }}\n                           srcSet=\"/download-doc@2x.png 2x,\n                                   /download-doc@3x.png 3x\" />\n                    </Button>\n                    <Card.Title>{this.state.registryEntity.title}</Card.Title>\n                    <Card.Text>\n                      <div><b>PriceUSD: {this.state.registryEntity.priceUSD}</b></div>\n                      <div>{this.state.registryEntity.description}</div>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              }\n            </div>\n          ) : null\n        }\n      </>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndex;\n","import React from 'react';\nimport { Table, Row, Col, Container,\n         InputGroup, FormControl, Button, Form } from 'react-bootstrap';\n\nclass PagesExplorer extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      transactions: []\n    };\n  }\n\n  async componentDidMount () {\n    let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/transactions`);\n    response = await response.json();\n    let transactions = response;\n    this.setState({\n      transactions\n    });\n  }\n\n  render () {\n    return (\n      <div style={{ backgroundColor: '#e9e9e9', minHeight: '100%' }}>\n        <Container md={{ span: 10, offset: 1 }}>\n          <Row style={{ paddingTop: '21px' }}>\n            <Col>\n              <InputGroup>\n                <FormControl\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                />\n                <InputGroup.Append>\n                  <Button variant=\"outline-secondary\">Search</Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Col>\n            <Col>\n              <Form.Control as=\"select\">\n                <option>AfterRegistryEntityCreated</option>\n                <option>AfterUserCreate</option>\n              </Form.Control>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Table hover className='explorer-table'>\n                <thead>\n                  <tr>\n                    <th>Transaction Hash</th>\n                    <th>Event</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                  this.state.transactions.map((transaction) => {\n                    return (\n                      <tr>\n                        <td>\n                          <a href={'https://ropsten.etherscan.io/tx/' + transaction.transactionHash}\n                              target=\"_blank\"\n                          >\n                            {transaction.transactionHash}\n                          </a>\n                        </td>\n                        <td>{transaction.eventName}</td>\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default PagesExplorer;\n","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from './components/Header';\n\nimport PagesWelcome from './routes/Pages/PagesWelcome';\nimport PagesAcceptInvite from './routes/Pages/PagesAcceptInvite';\nimport UsersNew from './routes/Users/UsersNew';\nimport UsersIndex from './routes/Users/UsersIndex';\nimport RegistryEntitiesNew from './routes/RegistryEntities/RegistryEntitiesNew';\nimport RegistryEntitiesIndex from './routes/RegistryEntities/RegistryEntitiesIndex';\nimport PagesExplorer from './routes/Pages/PagesExplorer';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      current_user_role: undefined,\n      query_params: this.parse_query_params(props)\n    };\n\n    if (this.state.query_params.email && this.state.query_params.token) {\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/users/check_token?email=${this.state.query_params.email}&token=${this.state.query_params.token}`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              token_is_valid: result.token_is_valid\n            });\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.error(error);\n          }\n        )\n    }\n  }\n\n  parse_query_params () {\n    let query_params_str = window.location.search.split('?')[1];\n    if (query_params_str) {\n      let query_params = {};\n      query_params_str.split('&').map( (query_param) => {\n        let [ k, v ] = query_param.split('=');\n        query_params[k] = v;\n      });\n      return query_params;\n    } else {\n      return {};\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header current_user_role={this.state.current_user_role} token_is_valid={this.state.token_is_valid} />\n          \n          <Switch>\n            <Route path=\"/\" exact                  render={(props) => <PagesWelcome app={this} {...props} />} />\n            <Route path=\"/invites/accept\"          render={(props) => <PagesAcceptInvite app={this} {...props} />} />\n            <Route path=\"/users/new\"               component={UsersNew} />\n            <Route path=\"/users/index\"             component={UsersIndex} />\n            <Route path=\"/registry_entities/new\"   component={RegistryEntitiesNew} />\n            <Route path=\"/registry_entities\"       render={(props) => <RegistryEntitiesIndex current_user_role={this.state.current_user_role} token_is_valid={this.state.token_is_valid} {...props} /> } />\n            <Route path=\"/explorer\"                component={PagesExplorer} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  development: {\n    googleMapsKey: \"AIzaSyCuKAVxSLNXtd8xiB_JtIv7NDJ6h3sr4C8\"\n  },\n  production: {\n    googleMapsKey: \"AIzaSyCuKAVxSLNXtd8xiB_JtIv7NDJ6h3sr4C8\"\n  }\n};"],"sourceRoot":""}